[
  {
    "command": "a2disconf",
    "description": "Disable an Apache configuration file on Debian-based OSes.",
    "syntax": [
      "sudo a2disconf {{configuration_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "a2dismod",
    "description": "Disable an Apache module on Debian-based OSes.",
    "syntax": [
      "sudo a2dismod {{module}}"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "a2dissite",
    "description": "Disable an Apache virtual host on Debian-based OSes.",
    "syntax": [
      "sudo a2dissite {{virtual_host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "a2enconf",
    "description": "Enable an Apache configuration file on Debian-based OSes.",
    "syntax": [
      "sudo a2enconf {{configuration_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "a2enmod",
    "description": "Enable an Apache module on Debian-based OSes.",
    "syntax": [
      "sudo a2enmod {{module}}"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "a2ensite",
    "description": "Enable an Apache virtual host on Debian-based OSes.",
    "syntax": [
      "sudo a2ensite {{virtual_host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "a2query",
    "description": "Retrieve runtime configuration from Apache on Debian-based OSes.",
    "syntax": [
      "sudo a2query -m"
    ],
    "options": [],
    "examples": [],
    "category": "Apache"
  },
  {
    "command": "aa-complain",
    "description": "Set an AppArmor policy to complain mode.",
    "syntax": [
      "sudo aa-complain {{path/to/profile1 path/to/profile2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aa-disable",
    "description": "Disable AppArmor security policies.",
    "syntax": [
      "sudo aa-disable {{path/to/profile1 path/to/profile2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aa-enforce",
    "description": "Set an AppArmor profile to enforce mode.",
    "syntax": [
      "sudo aa-enforce --dir {{path/to/profile}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "aa-status",
    "description": "List currently loaded AppArmor modules.",
    "syntax": [
      "sudo aa-status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "abbr",
    "description": "Manage abbreviations for the fish shell.",
    "syntax": [
      "abbr {{[-a|--add]}} {{abbreviation_name}} {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "abroot",
    "description": "Utility providing full immutability and atomicity by transacting between 2 root partition states (A‚ü∫B).",
    "syntax": [
      "sudo abroot pkg add {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "abrt-action-analyze-backtrace",
    "description": "Analyze C/C++ backtrace.",
    "syntax": [
      "abrt-action-analyze-backtrace"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "abrt-action-analyze-c",
    "description": "Calculate UUID for a problem data directory with `coredump`.",
    "syntax": [
      "abrt-action-analyze-c"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "abrt-cli",
    "description": "Automatic Bug Reporting Tool for Fedora-based systems.",
    "syntax": [
      "abrt-cli list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "abrt",
    "description": "This command is an alias of `abrt-cli`.",
    "syntax": [
      "tldr abrt-cli"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ac",
    "description": "Print statistics on how long users have been connected.",
    "syntax": [
      "ac"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "acountry",
    "description": "Print the country where an IPv4 address or hostname is located.",
    "syntax": [
      "acountry {{example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "acpi",
    "description": "Shows battery status or thermal information.",
    "syntax": [
      "acpi"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "add-apt-repository",
    "description": "Manage `apt` repository definitions.",
    "syntax": [
      "add-apt-repository {{repository_spec}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "addpart",
    "description": "Tell the Linux kernel about the existence of the specified partition.",
    "syntax": [
      "addpart {{device}} {{partition}} {{start}} {{length}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "addr2line",
    "description": "Convert addresses of a binary into file names and line numbers.",
    "syntax": [
      "addr2line {{[-e|--exe]}} {{path/to/executable}} {{address}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "adduser",
    "description": "User addition utility.",
    "syntax": [
      "adduser {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "adig",
    "description": "Print information received from Domain Name System (DNS) servers.",
    "syntax": [
      "adig {{example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "agetty",
    "description": "Alternative `getty`: Open a `tty` port, prompt for a login name, and invoke the `/bin/login` command.",
    "syntax": [
      "agetty {{tty}} {{115200}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ahost",
    "description": "DNS lookup utility to display the A or AAAA record linked with a hostname or IP address.",
    "syntax": [
      "ahost {{example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "alien",
    "description": "Convert different installation packages to other formats.",
    "syntax": [
      "sudo alien --to-deb {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "alpine",
    "description": "An email client and Usenet newsgroup program with a pico/nano-inspired interface.",
    "syntax": [
      "alpine"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "alternatives",
    "description": "This command is an alias of `update-alternatives`.",
    "syntax": [
      "tldr update-alternatives"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "amixer",
    "description": "Mixer for ALSA soundcard driver.",
    "syntax": [
      "amixer -D pulse sset Master {{10%+}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "anbox",
    "description": "Run Android applications on any Linux operating system.",
    "syntax": [
      "anbox launch --package={{org.anbox.appmgr}} --component={{org.anbox.appmgr.AppViewActivity}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apache2ctl",
    "description": "Administrate the Apache HTTP web server.",
    "syntax": [
      "sudo apache2ctl start"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apachectl",
    "description": "Control an Apache HTTP server.",
    "syntax": [
      "sudo apachectl start"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apk",
    "description": "Alpine Linux package management tool.",
    "syntax": [
      "apk upgrade {{[-U|--update-cache]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aplay",
    "description": "Sound player for ALSA soundcard driver.",
    "syntax": [
      "aplay {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apparmor_status",
    "description": "This command is an alias of `aa-status`.",
    "syntax": [
      "tldr aa-status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apport-bug",
    "description": "File a bug report on Ubuntu.",
    "syntax": [
      "apport-bug"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "apt-add-repository",
    "description": "Manage `apt` repository definitions.",
    "syntax": [
      "apt-add-repository {{repository_spec}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt-cache",
    "description": "Debian and Ubuntu package query tool.",
    "syntax": [
      "apt-cache search {{query}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt-clone",
    "description": "Clone/backup/restore the package state of a Debian-based system.",
    "syntax": [
      "apt-clone clone {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt-file",
    "description": "Search for files in `apt` packages, including ones not yet installed.",
    "syntax": [
      "sudo apt update"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "apt-get",
    "description": "Debian and Ubuntu package management utility.",
    "syntax": [
      "apt-get update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt-key",
    "description": "Key management utility for the APT Package Manager on Debian and Ubuntu.",
    "syntax": [
      "apt-key list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt-mark",
    "description": "Utility to change the status of installed packages.",
    "syntax": [
      "sudo apt-mark auto {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt moo",
    "description": "An `APT` easter egg.",
    "syntax": [
      "apt moo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apt",
    "description": "Package management utility for Debian based distributions.",
    "syntax": [
      "sudo apt update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aptitude",
    "description": "Debian and Ubuntu package management utility.",
    "syntax": [
      "aptitude update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apx pkgmanagers",
    "description": "Manage package managers in `apx`.",
    "syntax": [
      "apx pkgmanagers create"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apx stacks",
    "description": "Manage stacks in `apx`.",
    "syntax": [
      "apx stacks new"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apx subsystems",
    "description": "Manage subsystems in `apx`.",
    "syntax": [
      "apx subsystems new"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "apx",
    "description": "Package management utility with support for multiple sources, allowing you to install packages in subsystems.",
    "syntax": [
      "tldr apx pkgmanagers"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "arch-chroot",
    "description": "Enhanced `chroot` command to help in the Arch Linux installation process.",
    "syntax": [
      "arch-chroot {{path/to/new/root}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "archey",
    "description": "Simple tool for stylishly displaying system information.",
    "syntax": [
      "archey"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "archinstall",
    "description": "Guided Arch Linux installer with a twist.",
    "syntax": [
      "archinstall"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "archivemount",
    "description": "Mount an archive for access as a filesystem.",
    "syntax": [
      "archivemount {{path/to/archive}} {{path/to/mount_point}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "archlinux-java",
    "description": "Switch between installed Java environments.",
    "syntax": [
      "archlinux-java status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "arecord",
    "description": "Sound recorder for ALSA soundcard driver.",
    "syntax": [
      "arecord {{[-vv|--verbose --verbose]}} {{[-f|--format]}} cd {{path/to/file.wav}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "arithmetic",
    "description": "Quiz on simple arithmetic problems.",
    "syntax": [
      "arithmetic"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ark",
    "description": "KDE's archiving tool.",
    "syntax": [
      "ark --batch {{path/to/archive}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "arpaname",
    "description": "Get the corresponding ARPA name for a IP addresses.",
    "syntax": [
      "arpaname {{ip_address}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "arpspoof",
    "description": "Forge ARP replies to intercept packets.",
    "syntax": [
      "sudo arpspoof -i {{wlan0}} {{host_ip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "arptables",
    "description": "Manage ARP filtering rules using the `nftables` backend.",
    "syntax": [
      "sudo arptables {{[-L|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "as",
    "description": "Portable GNU assembler.",
    "syntax": [
      "as {{path/to/file.s}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ascii",
    "description": "Show ASCII character aliases.",
    "syntax": [
      "ascii {{a}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "asciiart",
    "description": "Convert images to ASCII.",
    "syntax": [
      "asciiart {{path/to/image.jpg}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "asterisk",
    "description": "Run and manage telephone and exchange (phone) server instances.",
    "syntax": [
      "asterisk -r -vvv"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "at",
    "description": "Execute commands once at a later time.",
    "syntax": [
      "systemctl start atd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "atool",
    "description": "Manage archives of various formats.",
    "syntax": [
      "atool {{[-l|--list]}} {{path/to/archive.zip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "atop",
    "description": "Linux system and process monitor.",
    "syntax": [
      "atop"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "audit2allow",
    "description": "Create an SELinux local policy module to allow rules based on denied operations found in logs.",
    "syntax": [
      "sudo audit2allow {{[-a|--all]}} -M {{local_policy_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "auditctl",
    "description": "Utility to control the behavior, get status and manage rules of the Linux Auditing System.",
    "syntax": [
      "sudo auditctl -s"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aur",
    "description": "Build packages from the AUR and manage local repositories.",
    "syntax": [
      "aur search {{keyword}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aura",
    "description": "The Aura Package Manager: a secure, multilingual package manager for Arch Linux and the AUR.",
    "syntax": [
      "aura --aursync --both --search {{keyword|regular_expression}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "auracle",
    "description": "Command-line tool used to interact with Arch Linux's User Repository, commonly referred to as the AUR.",
    "syntax": [
      "auracle search '{{regular_expression}}'"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aurman",
    "description": "An Arch Linux utility to build and install packages from the Arch User Repository.",
    "syntax": [
      "aurman --sync --refresh --sysupgrade"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aurpublish",
    "description": "Publish Arch User Repository packages.",
    "syntax": [
      "aurpublish {{package_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "aurvote",
    "description": "Vote for packages in the Arch User Repository.",
    "syntax": [
      "aurvote --configure"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ausyscall",
    "description": "Map syscall names and numbers.",
    "syntax": [
      "ausyscall {{search_pattern}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "authconfig",
    "description": "Configure system authentication resources.",
    "syntax": [
      "authconfig --test"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "auto-cpufreq",
    "description": "Automatic CPU speed & power optimizer.",
    "syntax": [
      "sudo auto-cpufreq --{{monitor|live|update|remove|stats|force=governor}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "autopkgtest",
    "description": "Run tests on Debian packages.",
    "syntax": [
      "autopkgtest -- {{null}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "autorandr",
    "description": "Automatically change screen layout.",
    "syntax": [
      "autorandr --save {{profile_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "autorecon",
    "description": "A multi-threaded network reconnaissance tool which performs automated enumeration of services.",
    "syntax": [
      "sudo autorecon {{host_or_ip1,host_or_ip2,...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "avahi-browse",
    "description": "Display services and hosts exposed on the local network via mDNS/DNS-SD.",
    "syntax": [
      "avahi-browse {{[-a|--all]}} {{[-r|--resolve]}} {{[-l|--ignore-local]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "avahi-resolve-address",
    "description": "This command is an alias of `avahi-resolve --address`.",
    "syntax": [
      "tldr avahi-resolve"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "avahi-resolve-host-name",
    "description": "This command is an alias of `avahi-resolve --name`.",
    "syntax": [
      "tldr avahi-resolve"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "avahi-resolve",
    "description": "Translate between host names and IP Addresses.",
    "syntax": [
      "avahi-resolve -4 {{[-n|--name]}} {{service.local}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "avifenc",
    "description": "AV1 Image File Format (AVIF) encoder.",
    "syntax": [
      "avifenc {{path/to/input.png}} {{path/to/output.avif}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "backlight_control",
    "description": "Control a linux machine's backlight using percentage values.",
    "syntax": [
      "backlight_control {{+|-}}{{5}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "balooctl",
    "description": "File indexing and searching framework for KDE Plasma.",
    "syntax": [
      "balooctl status"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "batcat",
    "description": "This command is an alias of `bat`.",
    "syntax": [
      "tldr bat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "batch",
    "description": "Execute commands at a later time when the system load levels permit.",
    "syntax": [
      "systemctl start atd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "battop",
    "description": "An interactive viewer for the batteries installed in your notebook.",
    "syntax": [
      "battop"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bcachefs device",
    "description": "Manage devices within a running `bcachefs` filesystem.",
    "syntax": [
      "sudo bcachefs device add --label={{group}}.{{name}} {{path/to/mountpoint}} {{path/to/device}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "bcachefs",
    "description": "Manage `bcachefs` filesystems/devices.",
    "syntax": [
      "sudo bcachefs format {{path/to/partition}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "bchunk",
    "description": "Convert CD images to a set of `.iso` and `.cdr` tracks.",
    "syntax": [
      "bchunk {{path/to/image.bin}} {{path/to/image.cue}} {{path/to/output}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "beep",
    "description": "A utility to beep the PC speaker.",
    "syntax": [
      "beep"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "betterdiscordctl",
    "description": "Manage BetterDiscord on Linux.",
    "syntax": [
      "sudo betterdiscordctl install"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "betterlockscreen",
    "description": "Simple, minimal lock screen.",
    "syntax": [
      "betterlockscreen {{[-l|--lock]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bitwise",
    "description": "Multi base interactive calculator supporting dynamic base conversion and bit manipulation.",
    "syntax": [
      "bitwise"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "blastn",
    "description": "Nucleotide-Nucleotide BLAST.",
    "syntax": [
      "blastn -query {{query.fa}} -subject {{subject.fa}} -evalue {{1e-9}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "blastp",
    "description": "Protein-Protein BLAST.",
    "syntax": [
      "blastp -query {{query.fa}} -subject {{subject.fa}} -evalue {{1e-9}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bleachbit",
    "description": "Clean junk files on the filesystem.",
    "syntax": [
      "bleachbit --gui"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "blight",
    "description": "Utility for changing the display brightness.",
    "syntax": [
      "blight set {{50}} {{[-r|--relative]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "blkdiscard",
    "description": "Discards device sectors on storage devices. Useful for SSDs.",
    "syntax": [
      "blkdiscard {{/dev/device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "blkid",
    "description": "List all recognized partitions and their Universally Unique Identifier (UUID).",
    "syntax": [
      "sudo blkid"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "blkpr",
    "description": "Register, reserve, release, preempt, and clear persistent reservations on a block device that supports Persistent Reservations.",
    "syntax": [
      "blkpr {{[-c|--command]}} register {{[-k|--key]}} {{reservation_key}} {{path/to/device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "blockdev",
    "description": "Manage, query, and manipulate block devices.",
    "syntax": [
      "sudo blockdev --report"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "bluebuild",
    "description": "Build Containerfiles and custom images based on your `recipe.yml`.",
    "syntax": [
      "bluebuild build {{path/to/recipe.yml}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "bluetoothctl",
    "description": "Manage Bluetooth devices.",
    "syntax": [
      "bluetoothctl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bluetoothd",
    "description": "Daemon to manage bluetooth devices.",
    "syntax": [
      "bluetoothd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "blurlock",
    "description": "A simple wrapper around the i3 screen locker `i3lock`, which blurs the screen.",
    "syntax": [
      "blurlock"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bmon",
    "description": "Monitor bandwidth and capture network related statistics.",
    "syntax": [
      "bmon {{[-a|--show-all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "boltctl",
    "description": "Control thunderbolt devices.",
    "syntax": [
      "boltctl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bootc switch",
    "description": "Target a new container image reference to boot.",
    "syntax": [
      "sudo bootc switch {{image}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "bootc",
    "description": "Boot and upgrade via container images.",
    "syntax": [
      "bootc status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bootctl",
    "description": "Control EFI firmware boot settings and manage boot loader.",
    "syntax": [
      "bootctl status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bpftool",
    "description": "Inspect and manipulate eBPF programs and maps in a simple way.",
    "syntax": [
      "bpftool prog list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "bpftrace",
    "description": "High-level tracing language for Linux eBPF.",
    "syntax": [
      "bpftrace {{[-V|--version]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "br",
    "description": "Navigate directory trees interactively.",
    "syntax": [
      "br"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "braa",
    "description": "Ultra-fast mass SNMP scanner allowing multiple hosts simultaneously.",
    "syntax": [
      "braa public@{{ip}}:{{.1.3.6.*}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "brctl",
    "description": "Ethernet bridge administration.",
    "syntax": [
      "sudo brctl show"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bridge",
    "description": "Show and manipulate network bridge addresses and devices.",
    "syntax": [
      "bridge {{[l|link]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "brightnessctl",
    "description": "Utility for reading and controlling device brightness for Linux operating systems.",
    "syntax": [
      "brightnessctl --list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "broot",
    "description": "Navigate directory trees interactively.",
    "syntax": [
      "broot --install"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "bspc",
    "description": "Configure and control `bspwm`, managing nodes, desktops, monitors, and more.",
    "syntax": [
      "bspc monitor --reset-desktops {{desktop_name1}} {{desktop_name2}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bspwm",
    "description": "A tiling window manager based on binary space partitioning.",
    "syntax": [
      "bspwm -c {{path/to/config}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "btrbk",
    "description": "Create snapshots and remote backups of btrfs subvolumes.",
    "syntax": [
      "sudo btrbk stats"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "btrfs balance",
    "description": "Balance block groups on a btrfs filesystem.",
    "syntax": [
      "sudo btrfs balance status {{path/to/btrfs_filesystem}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs check",
    "description": "Check or repair a btrfs filesystem.",
    "syntax": [
      "sudo btrfs check {{path/to/partition}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs device",
    "description": "Manage devices in a btrfs filesystem.",
    "syntax": [
      "sudo btrfs device add {{path/to/block_device1 path/to/block_device2 ...}} {{path/to/btrfs_filesystem}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs filesystem",
    "description": "Manage btrfs filesystems.",
    "syntax": [
      "btrfs filesystem usage {{path/to/btrfs_mount}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs inspect-internal",
    "description": "Query internal information of a btrfs filesystem.",
    "syntax": [
      "sudo btrfs inspect-internal dump-super {{path/to/partition}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs property",
    "description": "Get, set, or list properties for a BTRFS filesystem object (files, directories, subvolumes, filesystems, or devices).",
    "syntax": [
      "sudo btrfs property list {{path/to/btrfs_object}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs rescue",
    "description": "Try to recover a damaged btrfs filesystem.",
    "syntax": [
      "sudo btrfs rescue chunk-recover {{path/to/partition}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs restore",
    "description": "Try to salvage files from a damaged btrfs filesystem.",
    "syntax": [
      "sudo btrfs restore {{path/to/btrfs_device}} {{path/to/target_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs scrub",
    "description": "Scrub btrfs filesystems to verify data integrity.",
    "syntax": [
      "sudo btrfs scrub start {{path/to/btrfs_mount}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "btrfs subvolume",
    "description": "Manage btrfs subvolumes and snapshots.",
    "syntax": [
      "sudo btrfs subvolume create {{path/to/new_subvolume}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "btrfs version",
    "description": "Display btrfs-progs version.",
    "syntax": [
      "btrfs version --help"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "btrfs",
    "description": "A filesystem based on the copy-on-write (COW) principle for Linux.",
    "syntax": [
      "sudo btrfs subvolume create {{path/to/subvolume}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "bully",
    "description": "Brute-force the WPS pin of a wireless access point.",
    "syntax": [
      "bully --bssid \"{{mac}}\" --channel \"{{channel}}\" --bruteforce \"{{interface}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "burpsuite",
    "description": "A GUI based application mainly used in web application penetration testing.",
    "syntax": [
      "burpsuite"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "busctl",
    "description": "Introspect and monitor the D-Bus bus.",
    "syntax": [
      "busctl list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bwa",
    "description": "Burrows-Wheeler Alignment tool.",
    "syntax": [
      "bwa index {{path/to/reference.fa}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "bwrap",
    "description": "Run programs in a lightweight sandbox.",
    "syntax": [
      "bwrap --ro-bind / / {{/bin/bash}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "byzanz-record",
    "description": "Record the screen.",
    "syntax": [
      "byzanz-record {{path/to/file.[byzanz|flv|gif|ogg|ogv|webm]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cacaclock",
    "description": "Display the current time as ASCII art.",
    "syntax": [
      "cacaclock"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cacademo",
    "description": "Display a random ASCII art animation.",
    "syntax": [
      "cacademo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cacafire",
    "description": "Display an animated ASCII fire.",
    "syntax": [
      "cacafire"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cacaview",
    "description": "Display an image in PMN format.",
    "syntax": [
      "cacaview {{path/to/image}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "caffeinate",
    "description": "Prevent desktop from sleeping.",
    "syntax": [
      "caffeinate"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "caffeine-indicator",
    "description": "Manually inhibit desktop idleness with a toggle.",
    "syntax": [
      "caffeine-indicator"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "caffeine",
    "description": "Prevent desktop idleness in full-screen mode.",
    "syntax": [
      "caffeine"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "caja",
    "description": "Manage files and directories in the MATE desktop environment.",
    "syntax": [
      "caja"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "cal",
    "description": "Display a calendar with the current day highlighted.",
    "syntax": [
      "cal"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "calcurse",
    "description": "A text-based calendar and scheduling application for the command-line.",
    "syntax": [
      "calcurse"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "caligula",
    "description": "A user-friendly, lightweight TUI for disk imaging.",
    "syntax": [
      "caligula burn {{path/to/image.iso}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cam",
    "description": "Frontend tool for `libcamera`.",
    "syntax": [
      "cam {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cat",
    "description": "Print and concatenate files.",
    "syntax": [
      "cat {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "cbatticon",
    "description": "A lightweight and fast battery icon that sits in your system tray.",
    "syntax": [
      "cbatticon"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cc",
    "description": "This command is an alias of `gcc`.",
    "syntax": [
      "tldr gcc"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cdrdao",
    "description": "Read and write CDs in disc-at-once mode.",
    "syntax": [
      "cdrdao read-cd --device {{/dev/cdrom}} --read-raw {{image.toc}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ceph",
    "description": "A unified storage system.",
    "syntax": [
      "ceph status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "certbot",
    "description": "The Let's Encrypt Agent for automatically obtaining and renewing TLS certificates.",
    "syntax": [
      "sudo certbot certonly --webroot {{[-w|--webroot-path]}} {{path/to/webroot}} {{[-d|--domain]}} {{subdomain.example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cewl",
    "description": "URL spidering tool for making a cracking wordlist from web content.",
    "syntax": [
      "cewl {{[-d|--depth]}} 2 {{[-w|--write]}} {{path/to/wordlist.txt}} {{url}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cfdisk",
    "description": "Manage partition tables and partitions on a hard disk using a curses UI.",
    "syntax": [
      "cfdisk {{/dev/sdX}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cgclassify",
    "description": "Move running tasks to `cgroups`.",
    "syntax": [
      "cgclassify -g {{cpu:student}} {{1234}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cgcreate",
    "description": "Create cgroups, used to limit, measure, and control resources used by processes.",
    "syntax": [
      "cgcreate -g {{group_type}}:{{group_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cgexec",
    "description": "Limit, measure, and control resources used by processes.",
    "syntax": [
      "cgexec -g {{controller}}:{{cgroup_name}} {{process_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cgroups",
    "description": "Cgroups aka control groups is a Linux kernel feature for limiting, measuring, and controlling resource usage by processes.",
    "syntax": [
      "tldr cgclassify"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "chage",
    "description": "Change user account and password expiry information.",
    "syntax": [
      "chage {{[-l|--list]}} {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "chat",
    "description": "Automate conversations with a modem or serial device.",
    "syntax": [
      "chat '{{expect_send_pairs}}'"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "chattr",
    "description": "Change attributes of files or directories.",
    "syntax": [
      "chattr +i {{path/to/file_or_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "chcon",
    "description": "Change SELinux security context of a file or files/directories.",
    "syntax": [
      "ls {{[-lZ|-l --context]}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "chcpu",
    "description": "Enable/disable a system's CPUs.",
    "syntax": [
      "chcpu {{[-d|--disable]}} {{1,3}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "check-dfsg-status",
    "description": "Report non-free packages installed on Debian-based OSes.",
    "syntax": [
      "check-dfsg-status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "check-language-support",
    "description": "Display a list of missing language packages on Ubuntu.",
    "syntax": [
      "check-language-support"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "check-support-status",
    "description": "Identify installed Debian packages for which support has had to be limited or prematurely ended.",
    "syntax": [
      "check-support-status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "checkinstall",
    "description": "Track the local installation of a software package, and produce a binary package which can be used with a system's native package manager.",
    "syntax": [
      "sudo checkinstall --default"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "checkupdates-aur",
    "description": "Check pending updates from the Arch User Repository (AUR).",
    "syntax": [
      "checkupdates-aur"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "checkupdates",
    "description": "Check pending updates in Arch Linux.",
    "syntax": [
      "checkupdates"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "chfn",
    "description": "Update `finger` info for a user.",
    "syntax": [
      "chfn {{[-f|--full-name]}} {{new_display_name}} {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "chkconfig",
    "description": "Manage the runlevel of services on CentOS 6.",
    "syntax": [
      "chkconfig --list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "chmem",
    "description": "Modify the state of memory blocks (online or offline) in a Linux system.",
    "syntax": [
      "sudo chmem {{[-b|--block]}} {{[-d|--disable]}} {{block_number}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "chntpw",
    "description": "A utility that can edit windows registry, reset user password, promote users to administrator by modifying the Windows SAM.",
    "syntax": [
      "chntpw -l {{path/to/sam_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "choom",
    "description": "Display and change the adjust out-of-memory killer score.",
    "syntax": [
      "choom {{[-p|--pid]}} {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "chpasswd",
    "description": "Change the passwords for multiple users by using `stdin`.",
    "syntax": [
      "printf \"{{username}}:{{new_password}}\" | sudo chpasswd"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "chrt",
    "description": "Manipulate the real-time attributes of a process.",
    "syntax": [
      "chrt {{[-p|--pid]}} {{PID}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "chsh",
    "description": "Change user's login shell.",
    "syntax": [
      "chsh"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cloud-init",
    "description": "Command line tool for managing cloud instance initialization.",
    "syntax": [
      "cloud-init status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cmus",
    "description": "Command-line Music Player.",
    "syntax": [
      "cmus {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cockpit-bridge",
    "description": "Relay messages and commands between the front end and server in the cockpit suite.",
    "syntax": [
      "cockpit-bridge --packages"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cockpit-desktop",
    "description": "Securely access Cockpit pages in a running session.",
    "syntax": [
      "cockpit-desktop {{url}} {{SSH_host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cockpit-tls",
    "description": "TLS terminating HTTP proxy to encrypt traffic between a client and `cockpit-ws`.",
    "syntax": [
      "cockpit-tls --port {{port}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cockpit-ws",
    "description": "Communicate between the browser application and various configuration tools and services like `cockpit-bridge`.",
    "syntax": [
      "cockpit-ws --local-ssh"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cointop",
    "description": "Track and monitor cryptocurrencies in the terminal.",
    "syntax": [
      "cointop"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "collectd",
    "description": "System statistics collection daemon.",
    "syntax": [
      "collectd -t"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "colrm",
    "description": "Remove columns from `stdin`.",
    "syntax": [
      "colrm {{1 1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "column",
    "description": "Format `stdin` or a file into multiple columns.",
    "syntax": [
      "printf \"header1 header2\\nbar foo\\n\" | column {{[-c|--output-width]}} {{30}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "compose",
    "description": "An alias to a `run-mailcap`'s action compose.",
    "syntax": [
      "compose {{filename}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "compress",
    "description": "Compress files using the Unix `compress` command.",
    "syntax": [
      "compress {{path/to/file1 path/to/file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "compseq",
    "description": "Calculate the composition of unique words in sequences.",
    "syntax": [
      "compseq {{path/to/file.fasta}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "compsize",
    "description": "Calculate the compression ratio of a set of files on a btrfs filesystem.",
    "syntax": [
      "sudo compsize {{path/to/file_or_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "conky",
    "description": "Light-weight system monitor for X.",
    "syntax": [
      "conky"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "conntrack",
    "description": "Interact with the Netfilter connection tracking system.",
    "syntax": [
      "conntrack {{[-L|--dump]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "coredumpctl",
    "description": "Retrieve and process saved core dumps and metadata.",
    "syntax": [
      "coredumpctl"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cpufreq-aperf",
    "description": "Calculate the average CPU frequency over a time period.",
    "syntax": [
      "sudo cpufreq-aperf"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cpufreq-info",
    "description": "Show CPU frequency information.",
    "syntax": [
      "cpufreq-info"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cpufreq-set",
    "description": "A tool to modify CPU frequency settings.",
    "syntax": [
      "sudo cpufreq-set {{[-c|--cpu]}} {{1}} {{[-g|--governor]}} {{userspace}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cpuid",
    "description": "Display detailed information about all CPUs.",
    "syntax": [
      "cpuid"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cpulimit",
    "description": "A tool to throttle the CPU usage of other processes.",
    "syntax": [
      "cpulimit --pid {{1234}} --limit {{25%}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "cpupower",
    "description": "Tools regarding CPU power and tuning options.",
    "syntax": [
      "sudo cpupower {{[-c|--cpu]}} {{all}} info"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "create-image",
    "description": "Create CPIO images.",
    "syntax": [
      "create-image {{[-o|--output]}} {{path/to/output.cpio}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "createrepo",
    "description": "Initializes an RPM repository in a directory, including all XML and SQLite files.",
    "syntax": [
      "createrepo {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "create_ap",
    "description": "Create an AP (Access Point) at any channel.",
    "syntax": [
      "create_ap {{wlan0}} {{eth0}} {{access_point_ssid}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cryptcat",
    "description": "Cryptcat is netcat with encryption capabilities.",
    "syntax": [
      "cryptcat -k {{password}} -l -p {{port}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cryptsetup luksFormat",
    "description": "Initialize a LUKS partition and the initial key slot (0) with a passphrase or keyfile.",
    "syntax": [
      "cryptsetup luksFormat {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "cryptsetup open",
    "description": "Create a decrypted mapping of an encrypted volume.",
    "syntax": [
      "cryptsetup open {{/dev/sdXY}} {{mapping_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cryptsetup",
    "description": "Manage plain `dm-crypt` and LUKS (Linux Unified Key Setup) encrypted volumes.",
    "syntax": [
      "cryptsetup luksFormat {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "csplit",
    "description": "Split a file into pieces.",
    "syntax": [
      "csplit {{path/to/file}} 5 23"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "ctop",
    "description": "Instantly visualize container performance and health with real-time metrics on CPU, memory, and block IO usage.",
    "syntax": [
      "ctop -a"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "ctr",
    "description": "Manage `containerd` containers and images.",
    "syntax": [
      "ctr containers list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ctrlaltdel",
    "description": "Utility to control what happens when CTRL+ALT+DEL is pressed.",
    "syntax": [
      "ctrlaltdel"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cu",
    "description": "Call Up another system and act as a dial-in/serial terminal or perform file transfers with no error checking.",
    "syntax": [
      "sudo cu {{[-l|--line]}} {{/dev/ttyXYZ}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "curlie",
    "description": "A frontend to `curl` that adds the ease of use of `httpie`.",
    "syntax": [
      "curlie {{httpbin.org/get}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "cuyo",
    "description": "Tetris like game.",
    "syntax": [
      "cuyo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "daemon",
    "description": "Run processes into daemons.",
    "syntax": [
      "daemon --name=\"{{name}}\" {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "daemonize",
    "description": "Run a command (that does not daemonize itself) as a Unix daemon.",
    "syntax": [
      "daemonize {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "darling",
    "description": "Run macOS software on Linux.",
    "syntax": [
      "darling shell {{uname}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "datamash",
    "description": "Perform basic numeric, textual and statistical operations on input textual data files.",
    "syntax": [
      "seq 3 | datamash max 1 min 1 mean 1 median 1"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dbclient",
    "description": "Lightweight Dropbear Secure Shell client.",
    "syntax": [
      "dbclient {{user}}@{{host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dbus-daemon",
    "description": "The D-Bus message daemon, allowing multiple programs to exchange messages.",
    "syntax": [
      "dbus-daemon --config-file {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "dconf read",
    "description": "Read key values from dconf databases.",
    "syntax": [
      "dconf read {{/path/to/key}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dconf reset",
    "description": "Reset key values in dconf databases.",
    "syntax": [
      "dconf reset {{/path/to/key}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dconf write",
    "description": "Write key values in dconf databases.",
    "syntax": [
      "dconf write {{/path/to/key}} \"{{value}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dconf",
    "description": "Manage dconf databases.",
    "syntax": [
      "dconf read {{/path/to/key}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dd",
    "description": "Convert and copy a file.",
    "syntax": [
      "dd if={{path/to/file.iso}} of={{/dev/usb_drive}} status=progress"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "ddcutil",
    "description": "Control the settings of connected displays via DDC/CI.",
    "syntax": [
      "ddcutil detect"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ddrescue",
    "description": "Data recovery tool that reads data from damaged block devices.",
    "syntax": [
      "sudo ddrescue {{/dev/sdb}} {{path/to/image.dd}} {{path/to/log.txt}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "deb-get",
    "description": "`apt-get` functionality for `.deb` packages published in third party repositories or via direct download.",
    "syntax": [
      "deb-get update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "debchange",
    "description": "Mantain the debian/changelog file of a Debian source package.",
    "syntax": [
      "debchange --nmu"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "debman",
    "description": "Read man pages from uninstalled packages.",
    "syntax": [
      "debman -p {{package}} {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "debootstrap",
    "description": "Create a basic Debian system.",
    "syntax": [
      "sudo debootstrap stable {{path/to/debian-root/}} http://deb.debian.org/debian"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "deborphan",
    "description": "Display orphan packages on operating systems using the APT package manager.",
    "syntax": [
      "deborphan"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "debsecan",
    "description": "Debian Security Analyzer, a tool to list vulnerabilities on a particular Debian installation.",
    "syntax": [
      "debsecan"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "debtap",
    "description": "Convert Debian packages into Arch Linux packages.",
    "syntax": [
      "sudo debtap --update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "debugfs",
    "description": "An interactive ext2/ext3/ext4 filesystem debugger.",
    "syntax": [
      "debugfs {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "debuginfod-find",
    "description": "Request debuginfo-related data.",
    "syntax": [
      "debuginfod-find -vv debuginfo {{build_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "debuild",
    "description": "Build a Debian package from source.",
    "syntax": [
      "debuild"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "decode-dimms",
    "description": "Decode RAM data.",
    "syntax": [
      "decode-dimms"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "delpart",
    "description": "Ask the Linux kernel to forget about a partition.",
    "syntax": [
      "sudo delpart {{/dev/sda}} {{1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "deluser",
    "description": "Delete a user from the system.",
    "syntax": [
      "sudo deluser {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dex",
    "description": "DesktopEntry Execution is a program to generate and execute DesktopEntry files of the Application type.",
    "syntax": [
      "dex {{[-a|--autostart]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "df",
    "description": "Display an overview of the filesystem disk space usage.",
    "syntax": [
      "df"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dget",
    "description": "Download Debian packages.",
    "syntax": [
      "dget {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dhcpcd",
    "description": "DHCP client.",
    "syntax": [
      "sudo dhcpcd {{[-k|--release]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dialog",
    "description": "Display dialog boxes on the terminal.",
    "syntax": [
      "dialog --msgbox \"{{Message}}\" {{height}} {{width}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "diff3",
    "description": "Compare three files line by line.",
    "syntax": [
      "diff3 {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "diffimg",
    "description": "Calculate intersection between two images.",
    "syntax": [
      "diffimg {{path/to/input_image1.ext}} {{path/to/input_image2.ext}} {{path/to/output_image.ext}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dir",
    "description": "List directory contents using one line per file, special characters are represented by backslash escape sequences.",
    "syntax": [
      "dir {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dirb",
    "description": "Scan HTTP-based webservers for directories and files.",
    "syntax": [
      "dirb {{https://example.org}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dirbuster",
    "description": "Brute force directories and filenames on servers.",
    "syntax": [
      "dirbuster -u {{http://example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "distrobox-create",
    "description": "Create a Distrobox container. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-create {{container_name}} {{[-i|--image]}} {{ubuntu:latest}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "distrobox-enter",
    "description": "Enter a Distrobox container. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-enter {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "distrobox-export",
    "description": "Export app/service/binary from container to host OS. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-export {{[-a|--app]}} {{package}} {{[-ef|--extra-flags]}} \"--foreground\""
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "distrobox-host-exec",
    "description": "Execute a command on the host from inside a Distrobox container. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-host-exec \"{{command}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "distrobox-list",
    "description": "List all Distrobox containers. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "distrobox-rm",
    "description": "Remove a Distrobox container. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-rm {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "distrobox-stop",
    "description": "Stop a Distrobox container. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-stop {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "distrobox-upgrade",
    "description": "Upgrade one or multiple Distrobox containers. See also: `tldr distrobox`.",
    "syntax": [
      "distrobox-upgrade {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "distrobox",
    "description": "Use any Linux distribution inside your terminal in a container. Install & use packages inside it while tightly integrating with the host OS, sharing storage (`home` directory) and hardware.",
    "syntax": [
      "tldr distrobox-create"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dkms",
    "description": "A framework that allows for dynamic building of kernel modules.",
    "syntax": [
      "dkms status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dm-tool",
    "description": "A tool to communicate with the display manager.",
    "syntax": [
      "dm-tool switch-to-greeter"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dmenu",
    "description": "Dynamic menu.",
    "syntax": [
      "{{ls}} | dmenu"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dmesg",
    "description": "Write the kernel messages to `stdout`.",
    "syntax": [
      "sudo dmesg"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dmidecode",
    "description": "Display the DMI (alternatively known as SMBIOS) table contents in a human-readable format.",
    "syntax": [
      "sudo dmidecode"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnf config-manager",
    "description": "Manage DNF configuration options and repositories on Fedora-based systems.",
    "syntax": [
      "dnf config-manager --add-repo={{repository_url}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnf group",
    "description": "Manage virtual collections of packages on Fedora-based systems.",
    "syntax": [
      "dnf group list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnf",
    "description": "Package management utility for RHEL, Fedora, and CentOS (replaces yum).",
    "syntax": [
      "sudo dnf upgrade"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnf5 group",
    "description": "This command is an alias of `dnf group`.",
    "syntax": [
      "tldr dnf group"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnf5",
    "description": "Package management utility for RHEL, Fedora, and CentOS (it replaces dnf, which in turn replaced yum).",
    "syntax": [
      "sudo dnf5 upgrade"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnsdomainname",
    "description": "Show the system's DNS domain name.",
    "syntax": [
      "dnsdomainname"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnsmap",
    "description": "The dnsmap command scans a domain for common subdomains e.g. smtp.domain.org.",
    "syntax": [
      "dnsmap {{example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnsrecon",
    "description": "DNS enumeration tool.",
    "syntax": [
      "dnsrecon {{[-d|--domain]}} {{example.com}} --db {{path/to/database.sqlite}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dnstracer",
    "description": "The dnstracer command determines where a DNS gets its information from.",
    "syntax": [
      "dnstracer {{www.example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "do-release-upgrade",
    "description": "The Ubuntu release upgrader.",
    "syntax": [
      "sudo do-release-upgrade"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dockerd",
    "description": "A persistent process to start and manage Docker containers.",
    "syntax": [
      "dockerd"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "dolphin",
    "description": "KDE's file manager to manage files and directories.",
    "syntax": [
      "dolphin"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dos2unix",
    "description": "Change DOS-style line endings to Unix-style.",
    "syntax": [
      "dos2unix {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dphys-swapfile",
    "description": "Manage the swap file on Debian-based Linux systems.",
    "syntax": [
      "dphys-swapfile swapoff"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dpigs",
    "description": "Show which installed packages occupy the most space on `apt` based systems.",
    "syntax": [
      "dpigs {{[-n|--lines]}} {{n}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dpkg-deb",
    "description": "Pack, unpack and provide information about Debian archives.",
    "syntax": [
      "dpkg-deb {{[-I|--info]}} {{path/to/file.deb}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dpkg-query",
    "description": "Display information about installed packages.",
    "syntax": [
      "dpkg-query {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dpkg-reconfigure",
    "description": "Reconfigure an already installed package.",
    "syntax": [
      "dpkg-reconfigure {{package1 package2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dpkg",
    "description": "Debian package manager.",
    "syntax": [
      "dpkg {{[-i|--install]}} {{path/to/file.deb}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dracut",
    "description": "Generate initramfs images to boot the Linux kernel.",
    "syntax": [
      "dracut"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "drawing",
    "description": "Free basic raster image editor in GNOME desktop environment.",
    "syntax": [
      "drawing"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dropbearconvert",
    "description": "Convert between Dropbear and OpenSSH private key formats.",
    "syntax": [
      "dropbearconvert openssh dropbear {{path/to/input_key}} {{path/to/output_key}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dropbearkey",
    "description": "Generate SSH keys in Dropbear format.",
    "syntax": [
      "dropbearkey -t {{ed25519}} -f {{path/to/key_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dstat",
    "description": "Versatile tool for generating system resource statistics.",
    "syntax": [
      "dstat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dump.exfat",
    "description": "Show on-disk information of an exFAT filesystem.",
    "syntax": [
      "dump.exfat {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dumpe2fs",
    "description": "Print the super block and blocks group information for ext2/ext3/ext4 filesystems.",
    "syntax": [
      "dumpe2fs {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dunstctl",
    "description": "Control command for `dunst`.",
    "syntax": [
      "dunstctl set-paused true"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "dunstify",
    "description": "A notification tool that is an extension of `notify-send`, but has more features based around `dunst`.",
    "syntax": [
      "dunstify \"{{Title}}\" \"{{Message}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "duperemove",
    "description": "Finds duplicate filesystem extents and optionally schedule them for deduplication.",
    "syntax": [
      "duperemove -r {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "dysk",
    "description": "Display filesystem information in a table.",
    "syntax": [
      "dysk"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "e2freefrag",
    "description": "Print the free space fragmentation information for ext2/ext3/ext4 filesystems.",
    "syntax": [
      "e2freefrag {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "e2fsck",
    "description": "Check a Linux ext2/ext3/ext4 filesystem. The partition should be unmounted.",
    "syntax": [
      "sudo e2fsck {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "e2image",
    "description": "Save critical ext2/ext3/ext4 filesystem metadata to a file.",
    "syntax": [
      "e2image {{/dev/sdXN}} {{path/to/image_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "e2label",
    "description": "Change the label on an ext2/ext3/ext4 filesystem.",
    "syntax": [
      "e2label {{/dev/sda1}} \"{{label_name}}\""
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "e2undo",
    "description": "Replay undo logs for an ext2/ext3/ext4 filesystem.",
    "syntax": [
      "e2undo -h {{path/to/undo_file}} {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "e4defrag",
    "description": "Defragment an ext4 filesystem.",
    "syntax": [
      "e4defrag {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "ebuild",
    "description": "A low level interface to the Gentoo Portage system.",
    "syntax": [
      "ebuild {{path/to/file.ebuild}} manifest"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "eclean-kernel",
    "description": "Remove old kernels in Gentoo.",
    "syntax": [
      "sudo eclean-kernel {{[-l|--list-kernels]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eclean",
    "description": "Clean repository source files and binary packages.",
    "syntax": [
      "sudo eclean distfiles"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "edit",
    "description": "An alias to a `run-mailcap`'s action edit.",
    "syntax": [
      "edit {{filename}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "edquota",
    "description": "Edit quotas for a user or group. By default it operates on all filesystems with quotas.",
    "syntax": [
      "edquota {{[-u|--user]}} $(whoami)"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "efibootmgr",
    "description": "Manipulate the UEFI Boot Manager.",
    "syntax": [
      "efibootmgr {{[-u|--unicode]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "eglinfo",
    "description": "Display platform EGL information.",
    "syntax": [
      "eglinfo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ego",
    "description": "Funtoo's official system personality management tool.",
    "syntax": [
      "ego sync"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "einfo",
    "description": "Provides the number of records indexed in each database field, the last update date of the database, and the available links from the database to other Entrez databases.",
    "syntax": [
      "einfo -dbs"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eix",
    "description": "Utilities for searching local Gentoo packages.",
    "syntax": [
      "eix {{query}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eject",
    "description": "Eject cds, floppy disks and tape drives.",
    "syntax": [
      "eject {{[-d|--default]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "elink",
    "description": "Look up precomputed neighbors within a database, or find associated records in other databases.",
    "syntax": [
      "esearch -db pubmed -query \"{{selective serotonin reuptake inhibitor}}\" | elink -target nuccore"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "emerge",
    "description": "Gentoo Linux package manager utility.",
    "syntax": [
      "sudo emerge --sync"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "engrampa",
    "description": "Package files into zip/tar file in MATE desktop environment.",
    "syntax": [
      "engrampa"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "enum4linux",
    "description": "Enumerate Windows and Samba information from remote systems.",
    "syntax": [
      "enum4linux -a {{remote_host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "envycontrol",
    "description": "GPU switching utility for Nvidia Optimus laptops.",
    "syntax": [
      "sudo envycontrol {{[-s|--switch]}} {{nvidia|integrated|hybrid}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eopkg",
    "description": "Package manager for Solus.",
    "syntax": [
      "sudo eopkg install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "equery",
    "description": "View information about Portage packages.",
    "syntax": [
      "equery list '*'"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "esa snap",
    "description": "Sentinel Application Platform (SNAP) for processing satellite data from the European Space Agency (ESA).",
    "syntax": [
      "snap --nosplash --nogui --modules --list --refresh"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "esearch",
    "description": "Perform a new Entrez search using terms in indexed fields.",
    "syntax": [
      "esearch -db pubmed -query \"{{selective serotonin reuptake inhibitor}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eselect kernel",
    "description": "An `eselect` module for managing the `/usr/src/linux` symlink.",
    "syntax": [
      "eselect kernel list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eselect locale",
    "description": "An `eselect` module for managing the `LANG` environment variable, which sets the system language.",
    "syntax": [
      "eselect locale list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eselect news",
    "description": "An `eselect` module for reading Gentoo news items.",
    "syntax": [
      "eselect news list {{all|new}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eselect profile",
    "description": "An `eselect` module for managing the `/etc/portage/make.profile` symlink, which sets the system profile.",
    "syntax": [
      "eselect profile list"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "eselect repository",
    "description": "An `eselect` module for configuring ebuild repositories for Portage.",
    "syntax": [
      "eselect repository list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "eselect",
    "description": "Gentoo's multi-purpose configuration and management tool.",
    "syntax": [
      "eselect"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "etckeeper",
    "description": "Track system configuration files in Git.",
    "syntax": [
      "sudo etckeeper init"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "ethtool",
    "description": "Display and modify Network Interface Controller (NIC) parameters.",
    "syntax": [
      "ethtool {{eth0}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "eu-readelf",
    "description": "Display information about ELF files.",
    "syntax": [
      "eu-readelf {{[-a|--all]}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "euse",
    "description": "Enable, disable, and obtain information about Gentoo USE flags.",
    "syntax": [
      "euse --active --global"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "evtest",
    "description": "Display information from input device drivers.",
    "syntax": [
      "sudo evtest"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "eww",
    "description": "Implement your own custom widgets in any window manager.",
    "syntax": [
      "eww daemon"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "exch",
    "description": "Swap the filepaths and filenames of two files.",
    "syntax": [
      "exch {{path/to/file1}} {{path/to/file2}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "exec",
    "description": "Execute a command without creating a child process.",
    "syntax": [
      "exec {{command -with -flags}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "exif",
    "description": "Show and change EXIF information in JPEG files.",
    "syntax": [
      "exif {{path/to/image.jpg}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "exiqgrep",
    "description": "Perl script offering possibilities to `grep` in the Exim queue output.",
    "syntax": [
      "exiqgrep -f '<{{email@example.com}}>'"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "expac",
    "description": "A data extraction tool for alpm databases, offering printf-like flexibility for pacman-based utilities.",
    "syntax": [
      "expac {{[-S|--sync]}} '%D' {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "expect",
    "description": "Script executor that interacts with other programs that require user input.",
    "syntax": [
      "expect {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "export",
    "description": "Export shell variables to child processes.",
    "syntax": [
      "export {{VARIABLE}}={{value}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "extrace",
    "description": "Trace exec() calls.",
    "syntax": [
      "sudo extrace"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "extrepo",
    "description": "Manage external Debian repositories.",
    "syntax": [
      "extrepo search {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "extundelete",
    "description": "Recover deleted files from ext3 or ext4 partitions by parsing the journal.",
    "syntax": [
      "sudo extundelete {{/dev/sdXN}} --restore-all"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "eyeD3",
    "description": "Read and manipulate metadata of MP3 files.",
    "syntax": [
      "eyeD3 {{filename.mp3}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "f5fpc",
    "description": "A proprietary commercial SSL VPN client by BIG-IP Edge.",
    "syntax": [
      "sudo f5fpc --start"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "factorio",
    "description": "Create and start a headless Factorio server.",
    "syntax": [
      "{{path/to/factorio}} --create {{path/to/save_file.zip}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fadvise",
    "description": "Control Linux file caching behavior.",
    "syntax": [
      "fadvise {{[-a|--advice]}} willneeded {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fail2ban-client",
    "description": "Configure and control fail2ban server.",
    "syntax": [
      "fail2ban-client status {{jail}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "faillock",
    "description": "Display and modify authentication failure record files.",
    "syntax": [
      "faillock"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fakeroot",
    "description": "Run a command in an environment faking root privileges for file manipulation.",
    "syntax": [
      "fakeroot"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "faketime",
    "description": "Fake the system time for a command.",
    "syntax": [
      "faketime '{{today 23:30}}' {{date}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fallocate",
    "description": "Reserve or deallocate disk space to files.",
    "syntax": [
      "fallocate {{[-l|--length]}} {{700M}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "farge",
    "description": "Display the color of a specific pixel on the screen in either hexadecimal or RGB formats.",
    "syntax": [
      "farge"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fatlabel",
    "description": "Get or set the label of a FAT32 partition.",
    "syntax": [
      "fatlabel {{/dev/sda1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fatrace",
    "description": "Report file access events.",
    "syntax": [
      "sudo fatrace"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fcrackzip",
    "description": "ZIP archive password cracking utility.",
    "syntax": [
      "fcrackzip {{[-b|--brute-force]}} {{[-l|--length]}} 4-8 {{[-c|--charset]}} aA1 {{archive}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "fdisk",
    "description": "Manage partition tables and partitions on a hard disk.",
    "syntax": [
      "sudo fdisk {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "feedreader",
    "description": "A GUI desktop RSS client.",
    "syntax": [
      "feedreader --unreadCount"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rename",
    "description": "Rename multiple files.",
    "syntax": [
      "rename {{'s/foo/bar/'}} {{*}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "filefrag",
    "description": "Report how badly fragmented a particular file might be.",
    "syntax": [
      "filefrag {{path/to/file1 path/to/file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "finch",
    "description": "Console-based modular messaging client.",
    "syntax": [
      "finch"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fincore",
    "description": "Display how much cache memory a file is taking.",
    "syntax": [
      "fincore {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "findfs",
    "description": "Finds a filesystem by label or UUID.",
    "syntax": [
      "findfs LABEL={{label}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "findmnt",
    "description": "Find your filesystem.",
    "syntax": [
      "findmnt"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "firejail",
    "description": "Securely sandboxes processes to containers using built-in Linux capabilities.",
    "syntax": [
      "sudo firecfg"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "firewall-cmd",
    "description": "The firewalld command-line client.",
    "syntax": [
      "firewall-cmd --list-all-zones"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fixfiles",
    "description": "Fix file SELinux security contexts.",
    "syntax": [
      "fixfiles -B"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "flameshot",
    "description": "Screenshot utility with a GUI.",
    "syntax": [
      "flameshot full"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flash",
    "description": "Flash cards in the terminal.",
    "syntax": [
      "flash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flashrom",
    "description": "Read, write, verify and erase flash chips.",
    "syntax": [
      "flashrom {{[-p|--programmer]}} {{programmer}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "flatpak-builder",
    "description": "Help build application dependencies.",
    "syntax": [
      "flatpak-builder {{path/to/build_directory}} {{path/to/manifest}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flatpak mask",
    "description": "Mask out updates and automatic installation.",
    "syntax": [
      "flatpak mask {{com.example.app}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flatpak remote-info",
    "description": "Show information about an application or runtime in a remote.",
    "syntax": [
      "flatpak remote-info {{remote_name}} {{com.example.app}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flatpak run",
    "description": "Run flatpak applications and runtimes.",
    "syntax": [
      "flatpak run {{com.example.app}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flatpak update",
    "description": "Update flatpak applications and runtimes.",
    "syntax": [
      "flatpak update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flatpak",
    "description": "Build, install and run flatpak applications and runtimes.",
    "syntax": [
      "flatpak run {{com.example.app}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flex",
    "description": "Lexical analyzer generator.",
    "syntax": [
      "flex {{analyzer.l}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "flock",
    "description": "Manage locks from shell scripts.",
    "syntax": [
      "flock {{path/to/lock.lock}} {{[-c|--command]}} \"{{command}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "fluidsynth",
    "description": "Synthesize audio from MIDI files.",
    "syntax": [
      "fluidsynth {{path/to/soundfont.sf2}} {{path/to/file.midi}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fold",
    "description": "Folds long lines for fixed-width output devices.",
    "syntax": [
      "fold {{[-w|--width]}} {{width}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "foreman",
    "description": "Manage Procfile-based applications.",
    "syntax": [
      "foreman start"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fprintd-delete",
    "description": "Remove fingerprints from the database.",
    "syntax": [
      "fprintd-delete {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fprintd-enroll",
    "description": "Enroll fingerprints into the database.",
    "syntax": [
      "fprintd-enroll"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fprintd-list",
    "description": "List enrolled fingerprints.",
    "syntax": [
      "fprintd-list {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fprintd-verify",
    "description": "Verify fingerprints against the database.",
    "syntax": [
      "fprintd-verify"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fprintd",
    "description": "Fingerprint management daemon.",
    "syntax": [
      "man fprintd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fpsync",
    "description": "Execute several synchronization processes locally or on several remote workers through SSH.",
    "syntax": [
      "fpsync -v {{/path/to/source/}} {{/path/to/destination/}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "free",
    "description": "Display amount of free and used memory in the system.",
    "syntax": [
      "free"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "fsck",
    "description": "Check the integrity of a filesystem or repair it. The filesystem should be unmounted at the time the command is run.",
    "syntax": [
      "sudo fsck {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fscrypt",
    "description": "Go tool for managing Linux filesystem encryption.",
    "syntax": [
      "fscrypt setup"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fstrim",
    "description": "Discard unused blocks on a mounted filesystem.",
    "syntax": [
      "sudo fstrim {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fuser",
    "description": "Display process IDs currently using files or sockets.",
    "syntax": [
      "fuser {{path/to/file_or_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "fuzzel",
    "description": "A Wayland-native application launcher and fuzzy finder, inspired by `rofi` and `dmenu`.",
    "syntax": [
      "fuzzel"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fwconsole",
    "description": "Manage and configure your FreePBX system (PBX server).",
    "syntax": [
      "fwconsole reload"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "fwupdmgr",
    "description": "Update device firmware, including UEFI, using `fwupd`.",
    "syntax": [
      "fwupdmgr get-devices"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gamescope",
    "description": "A micro-compositor used as a game layer.",
    "syntax": [
      "gamescope -- {{program}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gbp",
    "description": "A system to integrate the Debian package build system with Git.",
    "syntax": [
      "gbp import-dsc {{path/to/package.dsc}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gcov",
    "description": "Code coverage analysis and profiling tool that discovers untested parts of a program.",
    "syntax": [
      "gcov {{path/to/file.cpp}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gcrane completion",
    "description": "Generate the autocompletion script for gcrane for the specified shell.",
    "syntax": [
      "gcrane completion {{shell_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "gdebi",
    "description": "Easily install `.deb` files.",
    "syntax": [
      "gdebi {{path/to/package.deb}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "gedit",
    "description": "Text editor of the GNOME Desktop project.",
    "syntax": [
      "gedit {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "genfstab",
    "description": "Generate output suitable for addition to the `/etc/fstab` file.",
    "syntax": [
      "genfstab -U {{/mnt}} >> {{/mnt/etc/fstab}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "genie",
    "description": "Set up and use a \"bottle\" namespace to run systemd under WSL (Windows Subsystem for Linux).",
    "syntax": [
      "genie {{[-i|--initialize]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "genisoimage",
    "description": "Pre-mastering program to generate ISO9660/Joliet/HFS hybrid filesystems.",
    "syntax": [
      "genisoimage -o {{myimage.iso}} {{path/to/source_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "genkernel",
    "description": "Gentoo Linux utility to compile and install kernels.",
    "syntax": [
      "sudo genkernel all"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "getcap",
    "description": "Display the name and capabilities of each specified file.",
    "syntax": [
      "getcap {{path/to/file1 path/to/file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "getconf",
    "description": "Get configuration values from your Linux system.",
    "syntax": [
      "getconf -a"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "getenforce",
    "description": "Get the current mode of SELinux (i.e. enforcing, permissive, or disabled).",
    "syntax": [
      "getenforce"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "getent",
    "description": "Get entries from Name Service Switch libraries.",
    "syntax": [
      "getent group"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "getfacl",
    "description": "Get file access control lists (ACL).",
    "syntax": [
      "getfacl {{path/to/file_or_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "getfattr",
    "description": "Display file names and extended attributes.",
    "syntax": [
      "getfattr {{[-d|--dump]}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "getopt",
    "description": "Parse command-line arguments.",
    "syntax": [
      "getopt {{[-o|--options]}} vV {{[-l|--longoptions]}} verbose,version -- --version --verbose"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "getsebool",
    "description": "Get SELinux boolean value.",
    "syntax": [
      "getsebool {{httpd_can_connect_ftp}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gif2webp",
    "description": "Convert a GIF image to WebP.",
    "syntax": [
      "gif2webp {{path/to/image.gif}} -o {{path/to/image.webp}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gio trash",
    "description": "Move files to the trash bin.",
    "syntax": [
      "gio trash {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "gnome-calculator",
    "description": "The official calculator for the GNOME desktop environment.",
    "syntax": [
      "gnome-calculator"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gnome-extensions",
    "description": "Manage gnome extensions from the terminal.",
    "syntax": [
      "gnome-extensions list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gnome-screenshot",
    "description": "Capture the screen, a window, or a user-defined area and save the image to a file.",
    "syntax": [
      "gnome-screenshot"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "gnome-software",
    "description": "Add and remove applications and update your system.",
    "syntax": [
      "gnome-software"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gnome-terminal",
    "description": "The GNOME Terminal emulator.",
    "syntax": [
      "gnome-terminal"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "goaccess",
    "description": "An open source real-time web log analyzer.",
    "syntax": [
      "goaccess {{path/to/logfile1 path/to/file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "goldeneye.py",
    "description": "A HTTP DoS test tool.",
    "syntax": [
      "./goldeneye.py {{url}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "goobook",
    "description": "Access Google contacts from `mutt` or the command-line.",
    "syntax": [
      "goobook authenticate"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "google-chrome-stable",
    "description": "This command is an alias of `chromium`.",
    "syntax": [
      "tldr chromium"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gpasswd",
    "description": "Administer `/etc/group` and `/etc/gshadow`.",
    "syntax": [
      "sudo gpasswd {{[-A|--administrators]}} {{user1,user2}} {{group}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gpclient",
    "description": "Connect to a GlobalProtect VPN on Linux via OpenConnect.",
    "syntax": [
      "gpclient connect {{vpn_gateway_url}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grim",
    "description": "Grab images (Screenshots) from a Wayland compositor.",
    "syntax": [
      "grim"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "groupadd",
    "description": "Add user groups to the system.",
    "syntax": [
      "sudo groupadd {{group_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "groupdel",
    "description": "Delete existing user groups from the system.",
    "syntax": [
      "sudo groupdel {{group_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "groupmod",
    "description": "Modify existing user groups in the system.",
    "syntax": [
      "sudo groupmod {{[-n|--new-name]}} {{new_group}} {{group_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "growpart",
    "description": "Extend a partition in a disk or disk image to fill available space.",
    "syntax": [
      "growpart {{/dev/sdX}} {{n}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grub-bios-setup",
    "description": "Set up a device to use GRUB with a BIOS configuration.",
    "syntax": [
      "grub-bios-setup {{/dev/sdX}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grub-editenv",
    "description": "Edit GRUB environment variables.",
    "syntax": [
      "grub-editenv /boot/grub/grubenv set default={{Ubuntu}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grub-file",
    "description": "Check if a file is of a bootable image type.",
    "syntax": [
      "grub-file --is-arm-efi {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "grub-install",
    "description": "Install GRUB to a device.",
    "syntax": [
      "grub-install --target {{i386-pc}} {{path/to/device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grub-mkconfig",
    "description": "Generate a GRUB configuration file.",
    "syntax": [
      "sudo grub-mkconfig"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "grub-reboot",
    "description": "Set the default boot entry for GRUB, for the next boot only.",
    "syntax": [
      "sudo grub-reboot {{entry_number}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grub-script-check",
    "description": "The program `grub-script-check` takes a GRUB script file and checks it for syntax errors.",
    "syntax": [
      "grub-script-check {{path/to/grub_config_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "grub-set-default",
    "description": "Set the default boot entry for GRUB.",
    "syntax": [
      "sudo grub-set-default {{entry_number}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grub2-mkpasswd-pbkdf2",
    "description": "Generate a hashed password for GRUB.",
    "syntax": [
      "sudo grub2-mkpasswd-pbkdf2 {{[-c|--iteration-count]}} {{number_of_pbkdf2_iterations}} {{[-s|--salt]}} {{salt_length}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "grubby",
    "description": "Tool for configuring `grub` and `zipl` bootloaders.",
    "syntax": [
      "sudo grubby --update-kernel=ALL --args '{{quiet console=ttyS0}}'"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "gs",
    "description": "GhostScript, a PDF and PostScript interpreter.",
    "syntax": [
      "gs -dQUIET -dBATCH {{file.pdf}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "gsettings",
    "description": "Query and modify dconf settings with schema validation.",
    "syntax": [
      "gsettings set {{org.example.schema}} {{example-key}} {{value}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gtk-launch",
    "description": "Launch applications from `.desktop` files that reside in standard locations.",
    "syntax": [
      "gtk-launch {{Application_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "guake",
    "description": "A drop-down terminal for GNOME.",
    "syntax": [
      "<F12>"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "guix package",
    "description": "Install, upgrade and remove Guix packages, or rollback to previous configurations.",
    "syntax": [
      "guix package {{[-i|--install]}} {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gummy",
    "description": "Screen brightness/temperature manager for Linux/X11.",
    "syntax": [
      "gummy --temperature {{3000}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "gzexe",
    "description": "Compress executable files while keeping them executable.",
    "syntax": [
      "gzexe {{path/to/executable}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "halt",
    "description": "Halt the system.",
    "syntax": [
      "halt"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "handlr",
    "description": "Manage your default applications.",
    "syntax": [
      "handlr open {{https://example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hardinfo",
    "description": "Show hardware information in GUI window.",
    "syntax": [
      "hardinfo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hcitool",
    "description": "Monitor, configure connections, and send special commands to Bluetooth devices.",
    "syntax": [
      "hcitool scan"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hdparm",
    "description": "Get and set SATA and IDE hard drive parameters.",
    "syntax": [
      "sudo hdparm -I {{/dev/device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "head",
    "description": "Output the first part of files.",
    "syntax": [
      "head {{[-n|--lines]}} {{count}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "hexdump",
    "description": "An ASCII, decimal, hexadecimal, octal dump.",
    "syntax": [
      "hexdump {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hlint",
    "description": "Suggest improvements to Haskell code.",
    "syntax": [
      "hlint {{path/to/file}} options"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hollywood",
    "description": "Fill your console with Hollywood melodrama technobabble.",
    "syntax": [
      "hollywood"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "homectl",
    "description": "Create, remove, change or inspect home directories using the systemd-homed service.",
    "syntax": [
      "homectl list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "homeshick",
    "description": "Synchronize Git dotfiles.",
    "syntax": [
      "homeshick generate {{castle_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "hostnamectl",
    "description": "Get or set the hostname of the computer.",
    "syntax": [
      "hostnamectl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "htpdate",
    "description": "Synchronize local date and time via HTTP headers from web servers.",
    "syntax": [
      "sudo htpdate {{host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "http-prompt",
    "description": "An interactive command-line HTTP client featuring autocomplete and syntax highlighting.",
    "syntax": [
      "http-prompt"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "http_load",
    "description": "An HTTP benchmarking tool.",
    "syntax": [
      "http_load -rate {{20}} -seconds {{60}} {{path/to/urls.txt}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hwclock",
    "description": "Read or change the hardware clock. Usually requires root.",
    "syntax": [
      "hwclock"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hwinfo",
    "description": "Probe for the hardware present in the system.",
    "syntax": [
      "hwinfo --gfxcard"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hyprctl",
    "description": "Control parts of the Hyprland Wayland compositor.",
    "syntax": [
      "hyprctl reload"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "hyprpm",
    "description": "Control plugins for the Hyprland Wayland compositor.",
    "syntax": [
      "hyprpm add {{git_url}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "i3-scrot",
    "description": "Wrapper script around the screenshot utility `scrot` for the i3 window manager.",
    "syntax": [
      "i3-scrot"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "i386",
    "description": "This command is an alias of `setarch i386`.",
    "syntax": [
      "tldr setarch"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "i3exit",
    "description": "Exit the i3 window manager.",
    "syntax": [
      "i3exit logout"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "i3status",
    "description": "Status line for the i3 window manager.",
    "syntax": [
      "i3status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "i7z",
    "description": "An Intel CPU (only i3, i5 and i7) realtime reporting tool.",
    "syntax": [
      "sudo i7z"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ico",
    "description": "Display an animation of a polyhedron.",
    "syntax": [
      "ico -sleep {{0.1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "id3v2",
    "description": "Manage id3v2 tags, converts and lists id3v1.",
    "syntax": [
      "id3v2 --list-genres"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ifdown",
    "description": "Disable network interfaces.",
    "syntax": [
      "ifdown {{eth0}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ifmetric",
    "description": "An IPv4 route metrics manipulation tool.",
    "syntax": [
      "sudo ifmetric {{interface}} {{value}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ifstat",
    "description": "View network interface statistics.",
    "syntax": [
      "ifstat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ifstatus",
    "description": "Display OpenWRT interface status in JSON format.",
    "syntax": [
      "ifstatus {{interface_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "iftop",
    "description": "Show bandwidth usage on an interface by host.",
    "syntax": [
      "sudo iftop"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ifup",
    "description": "Enable network interfaces.",
    "syntax": [
      "ifup {{eth0}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ikaros",
    "description": "Vanilla OS Tool for managing drivers for your device.",
    "syntax": [
      "ikaros install {{device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "img2txt",
    "description": "Convert images to colour ASCII characters and output them to text-based coloured files.",
    "syntax": [
      "img2txt --width={{10}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "img2webp",
    "description": "Convert an image to WebP.",
    "syntax": [
      "img2webp {{path/to/image}} -o {{path/to/image.webp}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "imgp",
    "description": "Command-line image resizer and rotator for JPEG and PNG images.",
    "syntax": [
      "imgp {{[-x|--res]}} {{1366x1000}} {{path/to/directory}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "importctl",
    "description": "Download, Import, or Export disk images.",
    "syntax": [
      "sudo importctl pull-tar {{URL}} {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "imv",
    "description": "CLI image viewer for wayland and X11 aimed at tiling window managers.",
    "syntax": [
      "imv {{path/to/image1.ext path/to/image2.ext ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "informant",
    "description": "Read Arch Linux package news.",
    "syntax": [
      "sudo informant read"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "init",
    "description": "Linux run level manager.",
    "syntax": [
      "sudo init 5"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "inotifywait",
    "description": "Waits for changes to files.",
    "syntax": [
      "inotifywait {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "insmod",
    "description": "Dynamically load modules into the Linux Kernel.",
    "syntax": [
      "sudo insmod {{path/to/module.ko}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "instaloader",
    "description": "Download pictures, videos, captions, and other metadata from Instagram.",
    "syntax": [
      "instaloader {{profile_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "inxi",
    "description": "Print a summary of system information and resources for debugging purposes.",
    "syntax": [
      "inxi"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ionice",
    "description": "Get or set program I/O scheduling class and priority.",
    "syntax": [
      "ionice {{[-c|--class]}} {{scheduling_class}} {{[-n|--classdata]}} {{priority}} {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "iostat",
    "description": "Report statistics for devices and partitions.",
    "syntax": [
      "iostat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip address",
    "description": "IP Address management subcommand.",
    "syntax": [
      "ip {{[a|address]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip link",
    "description": "Manage network interfaces.",
    "syntax": [
      "ip {{[l|link]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip maddress",
    "description": "Manage multicast addresses.",
    "syntax": [
      "ip {{[m|maddress]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ip neighbour",
    "description": "Neighbour/ARP tables management IP subcommand.",
    "syntax": [
      "ip {{[n|neighbour]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip route add",
    "description": "Add a new networking route.",
    "syntax": [
      "sudo ip {{[r|route]}} {{[a|add]}} default via {{gateway_ip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip route get",
    "description": "Get a single route to a destination and print its contents exactly as the kernel sees it.",
    "syntax": [
      "ip {{[r|route]}} {{[g|get]}} {{1.1.1.1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ip route list",
    "description": "Display subcommand for IP Routing table management.",
    "syntax": [
      "ip {{[r|route]}} {{[l|list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip route show",
    "description": "This command is an alias of `ip route list`.",
    "syntax": [
      "tldr ip route list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip route",
    "description": "IP Routing table management subcommand.",
    "syntax": [
      "ip {{[r|route]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip rule",
    "description": "IP routing policy database management.",
    "syntax": [
      "ip {{[ru|rule]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip",
    "description": "Show/manipulate routing, devices, policy routing and tunnels.",
    "syntax": [
      "ip {{[a|address]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip6tables-restore",
    "description": "This command is an alias of `iptables-restore` for the IPv6 firewall.",
    "syntax": [
      "tldr iptables-restore"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip6tables-save",
    "description": "This command is an alias of `iptables-save` for the IPv6 firewall.",
    "syntax": [
      "tldr iptables-save"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ip6tables",
    "description": "This command is an alias of `iptables` for the IPv6 firewall.",
    "syntax": [
      "tldr iptables"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ipcmk",
    "description": "Create IPC (Inter-process Communication) resources.",
    "syntax": [
      "ipcmk --shmem {{segment_size_in_bytes}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ipcrm",
    "description": "Delete IPC (Inter-process Communication) resources.",
    "syntax": [
      "ipcrm {{[-m|--shmem-id]}} {{shmem_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ipcs",
    "description": "Show information about the usage of System V IPC facilities: shared memory segments, message queues, and semaphore arrays.",
    "syntax": [
      "ipcs"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ipmitool",
    "description": "Interface with the Intelligent Platform Management Interface (IPMI).",
    "syntax": [
      "systemctl start ipmidrv"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ipset",
    "description": "Create IP sets for firewall rules.",
    "syntax": [
      "ipset create {{set_name}} hash:ip"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iptables-restore",
    "description": "Restore the `iptables` IPv4 configuration.",
    "syntax": [
      "sudo iptables-restore {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iptables-save",
    "description": "Save the `iptables` IPv4 configuration.",
    "syntax": [
      "sudo iptables-save"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iptables",
    "description": "Configure tables, chains and rules of the Linux kernel IPv4 firewall.",
    "syntax": [
      "sudo iptables {{[-vnL --line-numbers|--verbose --numeric --list --line-numbers]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "isoinfo",
    "description": "Utility programs for dumping and verifying ISO disk images.",
    "syntax": [
      "isoinfo -f -i {{path/to/image.iso}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "isosize",
    "description": "Display the size of an ISO file.",
    "syntax": [
      "isosize {{path/to/file.iso}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "iw dev",
    "description": "Show and manipulate wireless devices.",
    "syntax": [
      "sudo iw dev {{wlp}} set type monitor"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iw",
    "description": "Show and manipulate wireless devices.",
    "syntax": [
      "iw dev {{wlp}} scan"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iwconfig",
    "description": "Configure and show the parameters of a wireless network interface.",
    "syntax": [
      "iwconfig"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iwctl",
    "description": "Control the `iwd` network supplicant.",
    "syntax": [
      "iwctl"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "iwinfo",
    "description": "Retrieve information about wireless interfaces on OpenWrt.",
    "syntax": [
      "iwinfo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "iwlist",
    "description": "Get detailed information from a wireless interface.",
    "syntax": [
      "iwlist {{wireless_interface}} scan"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "jhead",
    "description": "Image timestamp and EXIF data manipulation.",
    "syntax": [
      "jhead {{path/to/image.jpg}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "jobs",
    "description": "Shell builtin for viewing information about processes spawned by the current shell.",
    "syntax": [
      "jobs"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "journalctl",
    "description": "Query the systemd journal.",
    "syntax": [
      "journalctl {{[-b|--boot]}} {{[-p|--priority]}} 3"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "jpegtran",
    "description": "Perform lossless transformation of JPEG files.",
    "syntax": [
      "jpegtran {{[-f|-flip]}} {{horizontal|vertical}} {{path/to/image.jpg}} > {{path/to/output.jpg}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "just",
    "description": "A V8 JavaScript runtime for Linux.",
    "syntax": [
      "just"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "kde-builder",
    "description": "Easily build KDE components from its source repositories.",
    "syntax": [
      "kde-builder --initial-setup"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kde-inhibit",
    "description": "Inhibit various desktop functions while a command runs.",
    "syntax": [
      "kde-inhibit --power {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kdesrc-build",
    "description": "Easily build KDE components from its source repositories.",
    "syntax": [
      "kdesrc-build --initial-setup"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kdialog",
    "description": "Show KDE dialog boxes from within shell scripts.",
    "syntax": [
      "kdialog --msgbox \"{{message}}\" \"{{optional_detailed_message}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "kdocker",
    "description": "Easily dock applications to the system tray.",
    "syntax": [
      "kdocker"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kernel-install",
    "description": "Add and remove kernel and initrd images to and from `/boot`.",
    "syntax": [
      "sudo kernel-install add {{kernel-version}} {{kernel-image}} {{path/to/initrd-file ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kexec",
    "description": "Directly reboot into a new kernel.",
    "syntax": [
      "kexec {{[-l|--load]}} {{path/to/kernel}} --initrd={{path/to/initrd}} --command-line={{arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "keyctl",
    "description": "Manipulate the Linux kernel keyring.",
    "syntax": [
      "keyctl list {{target_keyring}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "keyd",
    "description": "Remap keys.",
    "syntax": [
      "systemctl enable keyd --now"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kill",
    "description": "Sends a signal to a process, usually related to stopping the process.",
    "syntax": [
      "kill {{process_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "kinfocenter",
    "description": "KDE information center to show system information.",
    "syntax": [
      "kinfocenter"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kjv",
    "description": "The word of God available right on your desktop.",
    "syntax": [
      "kjv -l"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kmod",
    "description": "Manage Linux kernel modules.",
    "syntax": [
      "kmod list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "knock",
    "description": "Port knocking client to open specific ports on firewall.",
    "syntax": [
      "knock {{hostname}} {{portnumber}}:{{protocol}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "knockd",
    "description": "Port knocking daemon to listen for port knocking and execute scripts.",
    "syntax": [
      "knockd {{[-d|--daemon]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "konsave",
    "description": "Save and apply your Linux customizations with just one command.",
    "syntax": [
      "konsave {{[-s|--save]}} {{profile_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "konsole",
    "description": "KDE's terminal emulator.",
    "syntax": [
      "konsole --workdir {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kpackagetool5",
    "description": "KPackage Manager: install, list, remove Plasma packages.",
    "syntax": [
      "kpackagetool5 --list-types"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kpackagetool6",
    "description": "KPackage Manager: install, list, remove Plasma packages.",
    "syntax": [
      "kpackagetool6 --list-types"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kpartx",
    "description": "Create device maps from partition tables.",
    "syntax": [
      "kpartx -a {{whole_disk.img}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "krdpserver",
    "description": "Start an RDP server.",
    "syntax": [
      "krdpserver {{[-u|--username]}} {{user_name}} {{[-p|--password]}} {{password}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "kreadconfig5",
    "description": "Read KConfig entries for KDE Plasma.",
    "syntax": [
      "kreadconfig5 --group {{group_name}} --key {{key_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "krfb-virtualmonitor",
    "description": "Create a virtual monitor and allow that monitor to be used with VNC.",
    "syntax": [
      "krfb-virtualmonitor --resolution {{1920}}x{{1080}} --name {{monitor_name}} --password {{password}} --port {{5900}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kscreen-console",
    "description": "Command-line tool to query KScreen's status.",
    "syntax": [
      "kscreen-console bug"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kscreen-doctor",
    "description": "Change and manipulate the screen setup.",
    "syntax": [
      "kscreen-doctor {{[-o|--outputs]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ksvgtopng5",
    "description": "Convert SVG files to PNG format.",
    "syntax": [
      "ksvgtopng5 {{width}} {{height}} {{path/to/file.svg}} {{output_filename.png}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "kwallet-query",
    "description": "Read and write to a KDE Wallet.",
    "syntax": [
      "kwallet-query {{kdewallet}} {{[-l|--list-entries]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kwrite",
    "description": "Text editor of the KDE Desktop project.",
    "syntax": [
      "kwrite {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "kwriteconfig5",
    "description": "Write KConfig entries for KDE Plasma.",
    "syntax": [
      "kwriteconfig5 --help"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "laptop-detect",
    "description": "Attempt to determine if the script is running on a laptop or desktop.",
    "syntax": [
      "laptop-detect"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "larasail",
    "description": "Manage Laravel on Digital Ocean servers.",
    "syntax": [
      "larasail setup"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "last",
    "description": "View the last logged in users.",
    "syntax": [
      "last"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lastb",
    "description": "List last logged in users.",
    "syntax": [
      "sudo lastb"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lastlog",
    "description": "Show the most recent login of all users or of a user.",
    "syntax": [
      "lastlog"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "latte-dock",
    "description": "Replacement dock for Plasma desktop.",
    "syntax": [
      "latte-dock --clear-cache"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lbu",
    "description": "Manage `apk` overlay files on a diskless Alpine Linux system.",
    "syntax": [
      "lbu {{[ci|commit]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lchage",
    "description": "Display or change user password policy.",
    "syntax": [
      "sudo lchage --date -1 {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lci",
    "description": "LOLCODE interpreter written in C.",
    "syntax": [
      "lci {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ldapdomaindump",
    "description": "Dump users, computers, groups, OS and membership information via LDAP to HTML, JSON and greppable output.",
    "syntax": [
      "ldapdomaindump {{[-u|--user]}} {{domain}}\\{{username}} {{[-p|--password]}} {{password|ntlm_hash}} {{hostname|ip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ldconfig",
    "description": "Configure symlinks and cache for shared library dependencies.",
    "syntax": [
      "sudo ldconfig"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ldd",
    "description": "Display shared library dependencies of a binary.",
    "syntax": [
      "ldd {{path/to/binary}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lddd",
    "description": "Find broken library links on the system.",
    "syntax": [
      "lddd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ledctl",
    "description": "Intel(R) Enclosure LED Control Application.",
    "syntax": [
      "sudo ledctl locate={{/dev/sda,/dev/sdb,...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "legit",
    "description": "Complementary command-line interface for Git.",
    "syntax": [
      "git switch {{target_branch}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lex",
    "description": "This command is an alias of `flex`.",
    "syntax": [
      "tldr flex"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lftp",
    "description": "Sophisticated file transfer program.",
    "syntax": [
      "lftp {{[-u|--user]}} {{username}} {{ftp.example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "libinput",
    "description": "Interface with libinput.",
    "syntax": [
      "sudo libinput list-devices"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "libtool",
    "description": "A generic library support script that hides the complexity of using shared libraries behind a consistent, portable interface.",
    "syntax": [
      "libtool --mode=compile gcc {{[-c|--compile]}} {{path/to/source.c}} {{[-o|--output]}} {{path/to/source.lo}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "libtoolize",
    "description": "An `autotools` tool to prepare a package for using `libtool`.",
    "syntax": [
      "libtoolize {{[-c|--copy]}} {{[-f|--force]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "libuser-lid",
    "description": "Display a user's groups or a group's users.",
    "syntax": [
      "sudo lid {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lid",
    "description": "Note: This page is currently a redirection stub. If you are familiar with this program, please open a pull request.",
    "syntax": [
      "tldr libuser-lid"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "light",
    "description": "Control the backlight of your screen.",
    "syntax": [
      "light"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "line",
    "description": "Read a single line of input.",
    "syntax": [
      "line"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "links",
    "description": "Command-line web browser.",
    "syntax": [
      "links {{https://example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "links2",
    "description": "Command-line web browser.",
    "syntax": [
      "links2 -g {{https://example.com}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "linux-boot-prober",
    "description": "Probe a partition for bootable operating systems.",
    "syntax": [
      "sudo linux-boot-prober {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "linux32",
    "description": "This command is an alias of `setarch linux32`.",
    "syntax": [
      "tldr setarch"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "linux64",
    "description": "This command is an alias of `setarch linux64`.",
    "syntax": [
      "tldr setarch"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lldpctl",
    "description": "Print link layer discovery protocol information.",
    "syntax": [
      "systemctl start lldpd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lnav",
    "description": "Advanced log file viewer to analyze logs with little to no setup.",
    "syntax": [
      "lnav {{path/to/log_or_directory|url}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lndir",
    "description": "Create a shadow directory of symbolic links to another directory tree.",
    "syntax": [
      "lndir {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "loadkeys",
    "description": "Load the kernel keymap for the console.",
    "syntax": [
      "sudo loadkeys {{en|de|fi|dvorak|...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "locale-gen",
    "description": "Generate locales defined in `/etc/locale.gen`.",
    "syntax": [
      "locale-gen"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "locale",
    "description": "Get locale-specific information.",
    "syntax": [
      "locale"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "localectl",
    "description": "Control the system locale and keyboard layout settings.",
    "syntax": [
      "localectl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "localedef",
    "description": "Manage locale definition files.",
    "syntax": [
      "localedef --list-archive"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "locate",
    "description": "Find filenames quickly.",
    "syntax": [
      "locate {{pattern}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "logger",
    "description": "Add messages to the system log.",
    "syntax": [
      "logger {{message}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "login",
    "description": "Initiates a session for a user.",
    "syntax": [
      "login {{user}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "loginctl",
    "description": "Manage the systemd login manager.",
    "syntax": [
      "loginctl list-sessions"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "logread",
    "description": "Read the `logd` ring buffer log.",
    "syntax": [
      "logread"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "logrotate",
    "description": "Rotates, compresses, and mails system logs.",
    "syntax": [
      "logrotate {{path/to/logrotate.conf}} --force"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "logsave",
    "description": "Save the output of a command in a logfile.",
    "syntax": [
      "logsave {{path/to/logfile}} {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "logwatch",
    "description": "Summarizes many different logs for common services (e.g. apache, pam_unix, sshd, etc.) in a single report.",
    "syntax": [
      "logwatch --range {{yesterday|today|all|help}} --detail {{low|medium|others}}'"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "look",
    "description": "Display lines beginning with a prefix in a file.",
    "syntax": [
      "look {{prefix}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lookandfeeltool",
    "description": "This command is an alias of `plasma-apply-lookandfeel`.",
    "syntax": [
      "tldr plasma-apply-lookandfeel"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "losetup",
    "description": "Set up and control loop devices.",
    "syntax": [
      "losetup {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lrunzip",
    "description": "This command is an alias of `lrzip -d`.",
    "syntax": [
      "tldr lrzip"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "lrzip",
    "description": "A large file compression program.",
    "syntax": [
      "lrzip {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lrztar",
    "description": "A wrapper for `lrzip` to simplify compression of directories.",
    "syntax": [
      "lrztar {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "lrzuntar",
    "description": "This command is an alias of `lrztar -d`.",
    "syntax": [
      "tldr lrztar"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lsattr",
    "description": "List file attributes on a Linux filesystem.",
    "syntax": [
      "lsattr"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lsblk",
    "description": "List information about devices.",
    "syntax": [
      "lsblk"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsb_release",
    "description": "Get LSB (Linux Standard Base) and distribution-specific information.",
    "syntax": [
      "lsb_release {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lscpu",
    "description": "Display information about the CPU architecture.",
    "syntax": [
      "lscpu"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "lsfd",
    "description": "List open files and the corresponding processes in Linux.",
    "syntax": [
      "lsfd"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lshw",
    "description": "List detailed information about hardware configurations as root user.",
    "syntax": [
      "sudo lshw -X"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsinitrd",
    "description": "Show the contents of an initramfs image.",
    "syntax": [
      "lsinitrd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsipc",
    "description": "Show information on System V IPC facilities currently employed in the system.",
    "syntax": [
      "lsipc"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "lslocks",
    "description": "List local system locks.",
    "syntax": [
      "lslocks"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lslogins",
    "description": "Show information about users on a Linux system.",
    "syntax": [
      "lslogins"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsmod",
    "description": "Show the status of Linux kernel modules.",
    "syntax": [
      "lsmod"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsns",
    "description": "List information about all namespaces or about the specified namespace.",
    "syntax": [
      "lsns"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lspci",
    "description": "List all PCI devices.",
    "syntax": [
      "lspci"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsscsi",
    "description": "List SCSI devices (or hosts) and their attributes.",
    "syntax": [
      "lsscsi"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lsusb",
    "description": "Display information about USB buses and devices connected to them.",
    "syntax": [
      "lsusb"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ltrace",
    "description": "Display dynamic library calls of a process.",
    "syntax": [
      "ltrace ./{{program}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "lvcreate",
    "description": "Create a logical volume in an existing volume group. A volume group is a collection of logical and physical volumes.",
    "syntax": [
      "lvcreate {{[-L|--size]}} {{10G}} {{vg1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvdisplay",
    "description": "Display information about Logical Volume Manager (LVM) logical volumes.",
    "syntax": [
      "sudo lvdisplay"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvextend",
    "description": "Increase the size of a logical volume.",
    "syntax": [
      "sudo lvextend {{[-L|--size]}} {{120G}} {{logical_volume}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvm",
    "description": "Manage physical volumes, volume groups, and logical volumes using the Logical Volume Manager (LVM) interactive shell.",
    "syntax": [
      "sudo lvm"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvreduce",
    "description": "Reduce the size of a logical volume.",
    "syntax": [
      "lvreduce {{[-L|--size]}} {{120G}} {{logical_volume}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvremove",
    "description": "Remove logical volumes.",
    "syntax": [
      "sudo lvremove {{volume_group}}/{{logical_volume}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvresize",
    "description": "Change the size of a logical volume.",
    "syntax": [
      "lvresize --size {{120G}} {{volume_group}}/{{logical_volume}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lvs",
    "description": "Display information about logical volumes.",
    "syntax": [
      "lvs"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc-attach",
    "description": "Attach to a container.",
    "syntax": [
      "sudo lxc-attach {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc-checkconfig",
    "description": "Check a kernel for LXC support.",
    "syntax": [
      "lxc-checkconfig"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "lxc-console",
    "description": "Attach to a container.",
    "syntax": [
      "agetty {{[-L|--local-line]}} {{38400}} tty1"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc-create",
    "description": "Create linux containers.",
    "syntax": [
      "sudo lxc-create {{[-n|--name]}} {{container_name}} {{[-t|--template]}} download"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc-destroy",
    "description": "Delete a container.",
    "syntax": [
      "sudo lxc-destroy {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc-info",
    "description": "Get info on a container.",
    "syntax": [
      "sudo lxc-info {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc-ls",
    "description": "List Linux containers.",
    "syntax": [
      "sudo lxc-ls"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc network",
    "description": "Manage networks for LXD containers.",
    "syntax": [
      "lxc network list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "lxc profile",
    "description": "Manage profiles for LXD containers.",
    "syntax": [
      "lxc profile list"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lxc-start",
    "description": "Start a container.",
    "syntax": [
      "systemctl start lxc-net"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "lxc-stop",
    "description": "Stop a container.",
    "syntax": [
      "sudo lxc-stop {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxc",
    "description": "Manage Linux containers using the lxd REST API.",
    "syntax": [
      "lxc list {{match_string}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxi",
    "description": "Control LXI compatible instruments such as oscilloscopes.",
    "syntax": [
      "lxi discover"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lxterminal",
    "description": "Terminal emulator for LXDE.",
    "syntax": [
      "lxterminal"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lynis",
    "description": "System and security auditing tool.",
    "syntax": [
      "sudo lynis update info"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "lz",
    "description": "List all files inside a '.tar.gz' compressed archive.",
    "syntax": [
      "lz {{path/to/file.tar.gz}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mac2unix",
    "description": "Change macOS-style line endings to Unix-style.",
    "syntax": [
      "mac2unix {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "macchanger",
    "description": "Command-line utility for manipulating network interface MAC addresses.",
    "syntax": [
      "macchanger {{[-s|--show]}} {{interface}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "machinectl",
    "description": "Control the systemd machine manager.",
    "syntax": [
      "sudo machinectl start {{machine_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "maim",
    "description": "Screenshot utility.",
    "syntax": [
      "maim {{path/to/screenshot.png}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "makepkg",
    "description": "Create a package which can be used with `pacman`.",
    "syntax": [
      "makepkg"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mandb",
    "description": "Manage the pre-formatted manual page database.",
    "syntax": [
      "mandb"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mangohud",
    "description": "Display a monitoring HUD on top of a Vulkan or OpenGL graphical application.",
    "syntax": [
      "mangohud {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "manpath",
    "description": "Determine the search path for manual pages.",
    "syntax": [
      "manpath"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mashtree",
    "description": "Make a fast tree from genomes.",
    "syntax": [
      "mashtree --numcpus {{12}} {{*.fastq.gz}} {{*.fasta}} > {{mashtree.dnd}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "matchpathcon",
    "description": "Lookup the persistent SELinux security context setting of a path.",
    "syntax": [
      "matchpathcon {{/path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mate-about",
    "description": "Show information about MATE desktop environment.",
    "syntax": [
      "mate-about --version"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mate-calc-cmd",
    "description": "Calculate mathematic expressions in MATE desktop environment in terminal.",
    "syntax": [
      "mate-calc-cmd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mate-calc",
    "description": "Calculate mathematic expressions in MATE desktop environment.",
    "syntax": [
      "mate-calc"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mate-screenshot",
    "description": "Make screenshots in MATE desktop environment.",
    "syntax": [
      "mate-screenshot"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mate-search-tool",
    "description": "Search files in MATE desktop environment.",
    "syntax": [
      "mate-search-tool --named={{string}} --path={{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mbw",
    "description": "Memory Bandwidth Benchmark.",
    "syntax": [
      "mbw -n 3 512"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "mcookie",
    "description": "Generate random 128-bit hexadecimal numbers.",
    "syntax": [
      "mcookie"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mdadm",
    "description": "RAID management utility.",
    "syntax": [
      "sudo mdadm --create {{/dev/md/MyRAID}} --level {{raid_level}} --raid-devices {{number_of_disks}} {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mdbook",
    "description": "Create online books by writing Markdown files.",
    "syntax": [
      "mdbook init"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mediamtx",
    "description": "Real-time media server and proxy.",
    "syntax": [
      "mediamtx"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "megadl",
    "description": "This command is an alias of `megatools-dl`.",
    "syntax": [
      "tldr megatools-dl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "megatools-dl",
    "description": "Download files from `mega.nz`.",
    "syntax": [
      "megatools-dl {{https://mega.nz/...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mesg",
    "description": "Check or set a terminal's ability to receive messages from other users, usually from the `write` command.",
    "syntax": [
      "mesg"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "microcom",
    "description": "A minimalistic terminal program, used to access remote devices via a serial, CAN or telnet connection from the console.",
    "syntax": [
      "microcom {{[-p|--port]}} {{/dev/ttyXYZ}} {{[-s|--speed]}} {{baud_rate}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mimetype",
    "description": "Automatically determine the MIME type of a file.",
    "syntax": [
      "mimetype {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "minicom",
    "description": "Communicate with the serial interface of a device.",
    "syntax": [
      "sudo minicom {{[-D|--device]}} {{/dev/ttyXYZ}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mke2fs",
    "description": "Create a Linux filesystem inside a partition.",
    "syntax": [
      "mkfs.ext2 {{/dev/sdb1}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.bcachefs",
    "description": "Create a `bcachefs` filesystem inside a partition.",
    "syntax": [
      "sudo mkfs.bcachefs {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.btrfs",
    "description": "Create a BTRFS filesystem.",
    "syntax": [
      "sudo mkfs.btrfs {{[-m|--metadata]}} single {{[-d|--data]}} single {{/dev/sdX}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.cramfs",
    "description": "Create a ROM filesystem inside a partition.",
    "syntax": [
      "mkfs.cramfs {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.erofs",
    "description": "Create an EROFS filesystem in an image.",
    "syntax": [
      "mkfs.erofs image.erofs root/"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.exfat",
    "description": "Create an exfat filesystem inside a partition.",
    "syntax": [
      "mkfs.exfat {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.ext4",
    "description": "Create an ext4 filesystem inside a partition.",
    "syntax": [
      "sudo mkfs.ext4 {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.f2fs",
    "description": "Create an F2FS filesystem inside a partition.",
    "syntax": [
      "sudo mkfs.f2fs {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.fat",
    "description": "Create an MS-DOS filesystem inside a partition.",
    "syntax": [
      "mkfs.fat {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs",
    "description": "Build a Linux filesystem on a hard disk partition.",
    "syntax": [
      "mkfs {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.minix",
    "description": "Create a Minix filesystem inside a partition.",
    "syntax": [
      "mkfs.minix {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.ntfs",
    "description": "Create a NTFS filesystem inside a partition.",
    "syntax": [
      "mkfs.ntfs {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkfs.vfat",
    "description": "This command is an alias of `mkfs.fat`.",
    "syntax": [
      "tldr mkfs.fat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mkfs.xfs",
    "description": "Create an XFS filesystem inside a partition.",
    "syntax": [
      "sudo mkfs.xfs {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkhomedir_helper",
    "description": "Create the user's home directory after creating the user.",
    "syntax": [
      "sudo mkhomedir_helper {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkinitcpio",
    "description": "Generate initial ramdisk environments for booting the Linux kernel based on the specified preset(s).",
    "syntax": [
      "mkinitcpio"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mkinitfs",
    "description": "Generate an initramfs on Alpine Linux.",
    "syntax": [
      "mkinitfs"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mkisofs",
    "description": "Create ISO files from directories.",
    "syntax": [
      "mkisofs -o {{filename.iso}} {{path/to/source_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mklost+found",
    "description": "Create a lost+found directory.",
    "syntax": [
      "mklost+found"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mknod",
    "description": "Create block or character device special files.",
    "syntax": [
      "sudo mknod {{path/to/device_file}} b {{major_device_number}} {{minor_device_number}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkosi",
    "description": "Build modern, legacy-free Linux images.",
    "syntax": [
      "mkosi summary"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mksquashfs",
    "description": "Create or append files and directories to squashfs filesystems.",
    "syntax": [
      "mksquashfs {{path/to/file_or_directory1 path/to/file_or_directory2 ...}} {{filesystem.squashfs}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mkswap",
    "description": "Set up a Linux swap area on a device or in a file.",
    "syntax": [
      "sudo mkswap {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mktemp",
    "description": "Create a temporary file or directory.",
    "syntax": [
      "mktemp"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mlabel",
    "description": "Set an MS-DOS volume label for FAT and VFAT filesystems.",
    "syntax": [
      "mlabel -i {{/dev/sda}} ::\"{{new_label}}\""
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mmcli",
    "description": "Control and monitor the ModemManager.",
    "syntax": [
      "mmcli --list-modems"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mmdebstrap",
    "description": "Create a Debian chroot.",
    "syntax": [
      "sudo mmdebstrap stable {{path/to/debian-root/}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mocp",
    "description": "Music on Console (MOC) audio player.",
    "syntax": [
      "mocp"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "modinfo",
    "description": "Extract information about a Linux kernel module.",
    "syntax": [
      "modinfo {{kernel_module}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "modprobe",
    "description": "Add or remove modules from the Linux kernel.",
    "syntax": [
      "sudo modprobe --dry-run {{module_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "module",
    "description": "Modify a users' environment using the module command.",
    "syntax": [
      "module avail"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mokutil",
    "description": "Configure Secure Boot Machine Owner Keys (MOK).",
    "syntax": [
      "mokutil --sb-state"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mono",
    "description": "Runtime for the .NET Framework.",
    "syntax": [
      "mono --debug {{path/to/program.exe}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mons",
    "description": "Quickly manage two displays.",
    "syntax": [
      "mons -o"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mopac",
    "description": "MOPAC (Molecular Orbital PACkage) is a semiempirical quantum chemistry program based on Dewar and Thiel's NDDO approximation.",
    "syntax": [
      "mopac {{path/to/input_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "more",
    "description": "Interactively display a file, allowing scrolling and searching.",
    "syntax": [
      "more {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mount.cifs",
    "description": "Mount SMB (Server Message Block) or CIFS (Common Internet File System) shares.",
    "syntax": [
      "mount.cifs -o user={{username}} //{{server}}/{{share_name}} {{mountpoint}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mount.ddi",
    "description": "Mount Discoverable Disk Images.",
    "syntax": [
      "mount.ddi {{path/to/image.raw}} {{/mnt/image}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mount",
    "description": "Get access to an entire filesystem in one directory.",
    "syntax": [
      "mount"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mount.smb3",
    "description": "This command is an alias of `mount.cifs`.",
    "syntax": [
      "tldr mount.cifs"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mountpoint",
    "description": "Test if a directory is a filesystem mountpoint.",
    "syntax": [
      "mountpoint {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "mpg123",
    "description": "Console MPEG audio player.",
    "syntax": [
      "mpg123 {{path/to/file1.mp3 path/to/file2.mp3 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mpicc",
    "description": "Open MPI C wrapper compiler.",
    "syntax": [
      "mpicc -c {{path/to/file.c}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "mpstat",
    "description": "Report CPU statistics.",
    "syntax": [
      "mpstat {{2}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "mssh",
    "description": "GTK+ based SSH client for interacting with multiple SSH servers at once.",
    "syntax": [
      "mssh {{user@host1 user@host2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "mt",
    "description": "Control magnetic tape drive operation (commonly LTO tape).",
    "syntax": [
      "mt -f {{/dev/nstX}} status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nala",
    "description": "Package management utility with better formatting.",
    "syntax": [
      "sudo nala install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "namcap",
    "description": "Check binary packages and source `PKGBUILD`s for common packaging mistakes.",
    "syntax": [
      "namcap {{path/to/pkgbuild}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "named",
    "description": "Execute the DNS (Dynamic Name Service) server daemon that converts host names to IP addresses and vice versa.",
    "syntax": [
      "named"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "namei",
    "description": "Follows a pathname (which can be a symbolic link) until a terminal point is found (a file/directory/char device etc).",
    "syntax": [
      "namei {{path/to/a}} {{path/to/b}} {{path/to/c}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "nautilus",
    "description": "Default file explorer for GNOME desktop environment.",
    "syntax": [
      "nautilus"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "navi",
    "description": "An interactive cheatsheet tool for the command-line and application launchers.",
    "syntax": [
      "navi"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ncal",
    "description": "This command is an alias of `cal`.",
    "syntax": [
      "tldr cal"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ncat",
    "description": "Read, write, redirect, and encrypt data across a network.",
    "syntax": [
      "ncat {{[-l|--listen]}} {{port}} > {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ndctl",
    "description": "Utility for managing Non-Volatile DIMMs.",
    "syntax": [
      "ndctl create-namespace --mode={{fsdax}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "needrestart",
    "description": "Check which daemons need to be restarted after library upgrades.",
    "syntax": [
      "needrestart"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "nemo",
    "description": "Manage files and directories in Cinnamon desktop environment.",
    "syntax": [
      "nemo"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "nethogs",
    "description": "Monitor bandwidth usage per process.",
    "syntax": [
      "sudo nethogs"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "netplan",
    "description": "Network configuration utility using YAML.",
    "syntax": [
      "sudo netplan apply"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "netselect-apt",
    "description": "Create a `sources.list` file for a Debian mirror with the lowest latency.",
    "syntax": [
      "sudo netselect-apt"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "netselect",
    "description": "Speed test for choosing a fast network server.",
    "syntax": [
      "sudo netselect {{host_1 host_2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "networkctl",
    "description": "Query the status of network links.",
    "syntax": [
      "networkctl list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "newgrp",
    "description": "Switch primary group membership.",
    "syntax": [
      "newgrp {{group_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nft",
    "description": "Allows configuration of tables, chains and rules provided by the Linux kernel firewall.",
    "syntax": [
      "sudo nft list ruleset"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nitch",
    "description": "A small and incredibly fast system fetch written fully in Nim.",
    "syntax": [
      "nitch"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nitrogen",
    "description": "Desktop background browser and setter for X Window.",
    "syntax": [
      "nitrogen {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nixos-container",
    "description": "Starts NixOS containers using Linux containers.",
    "syntax": [
      "sudo nixos-container list"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "nixos-option",
    "description": "Inspect a NixOS configuration.",
    "syntax": [
      "nixos-option {{option_key}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nixos-rebuild",
    "description": "Reconfigure a NixOS machine.",
    "syntax": [
      "sudo nixos-rebuild switch"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nl",
    "description": "Number lines from a file or from `stdin`.",
    "syntax": [
      "nl {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "nm-online",
    "description": "Ask NetworkManager whether the network is connected.",
    "syntax": [
      "nm-online"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli agent",
    "description": "Run `nmcli` as a NetworkManager secret agent or polkit agent.",
    "syntax": [
      "nmcli agent secret"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli connection",
    "description": "Manage connections with NetworkManager.",
    "syntax": [
      "nmcli connection"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli device",
    "description": "Manage network interfaces and establish new Wi-Fi connections using NetworkManager.",
    "syntax": [
      "nmcli device status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli general",
    "description": "Manage general settings of NetworkManager.",
    "syntax": [
      "nmcli general"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli monitor",
    "description": "Monitor changes to the NetworkManager connection status.",
    "syntax": [
      "nmcli monitor"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli networking",
    "description": "Manage the networking status of NetworkManager.",
    "syntax": [
      "nmcli networking"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli radio",
    "description": "Show the status of radio switches or enable/disable them using NetworkManager.",
    "syntax": [
      "nmcli radio wifi"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmcli",
    "description": "Manage the network configuration using NetworkManager.",
    "syntax": [
      "tldr nmcli agent"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nmon",
    "description": "A system administrator, tuner, and benchmark tool.",
    "syntax": [
      "nmon"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nmtui-connect",
    "description": "This command is an alias of `nmtui connect`.",
    "syntax": [
      "tldr nmtui"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nmtui-edit",
    "description": "This command is an alias of `nmtui edit`.",
    "syntax": [
      "tldr nmtui"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nmtui-hostname",
    "description": "This command is an alias of `nmtui hostname`.",
    "syntax": [
      "tldr nmtui"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nmtui",
    "description": "Text user interface for controlling NetworkManager.",
    "syntax": [
      "nmtui"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nologin",
    "description": "Alternative shell that prevents a user from logging in.",
    "syntax": [
      "chsh {{[-s|--shell]}} {{user}} nologin"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nordvpn",
    "description": "Command-line interface for NordVPN.",
    "syntax": [
      "nordvpn login"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "notify-send",
    "description": "Uses the current desktop environment's notification system to create a notification.",
    "syntax": [
      "notify-send \"{{Test}}\" \"{{This is a test}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nova",
    "description": "The OpenStack project that provides a way to provision compute instances.",
    "syntax": [
      "nova list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nsenter",
    "description": "Run a new command in a running process' namespace.",
    "syntax": [
      "nsenter {{[-t|--target]}} {{pid}} {{[-a|--all]}} {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "nsnake",
    "description": "Snake game in the terminal.",
    "syntax": [
      "nsnake"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "nstat",
    "description": "View network statistics.",
    "syntax": [
      "nstat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "nsxiv",
    "description": "Neo Simple X Image Viewer.",
    "syntax": [
      "nsxiv {{path/to/file1 path/to/file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ntfsfix",
    "description": "Fix common problems on an NTFS partition.",
    "syntax": [
      "sudo ntfsfix {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ntpd",
    "description": "The official NTP (Network Time Protocol) daemon to synchronize the system clock to remote time servers or local reference clocks.",
    "syntax": [
      "sudo ntpd"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ntpdate",
    "description": "Synchronize and set the date and time via NTP.",
    "syntax": [
      "sudo ntpdate {{host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ntpq",
    "description": "Query the Network Time Protocol (NTP) daemon.",
    "syntax": [
      "ntpq"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "numactl",
    "description": "Control NUMA policy for processes or shared memory.",
    "syntax": [
      "numactl --cpunodebind={{0}} --membind={{0,1}} -- {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "numlockx",
    "description": "Control the number lock key status in X11 sessions.",
    "syntax": [
      "numlockx status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "obabel",
    "description": "Translate chemistry-related data.",
    "syntax": [
      "obabel {{path/to/file.mol}} -O {{path/to/output_file.xyz}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "objcopy",
    "description": "Copy the contents of an object file to another file.",
    "syntax": [
      "objcopy {{path/to/source_file}} {{path/to/target_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "oomctl",
    "description": "Analyze the state stored in `systemd-oomd`.",
    "syntax": [
      "oomctl dump"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "openfortivpn",
    "description": "A VPN client, for Fortinet's proprietary PPP+SSL VPN solution.",
    "syntax": [
      "openfortivpn {{[-u|--username]}} {{username}} {{[-p|--password]}} {{password}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "openrc",
    "description": "The OpenRC service manager.",
    "syntax": [
      "sudo openrc {{runlevel_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "openvpn3",
    "description": "OpenVPN 3 Linux client.",
    "syntax": [
      "openvpn3 session-start {{[-c|--config]}} {{path/to/config.conf}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "opera-stable",
    "description": "This command is an alias of `chromium`.",
    "syntax": [
      "tldr chromium"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "opkg",
    "description": "A lightweight package manager used to install OpenWrt packages.",
    "syntax": [
      "opkg install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "optimus-manager",
    "description": "GPU switching utility for Nvidia Optimus laptops.",
    "syntax": [
      "optimus-manager --switch {{nvidia|integrated|hybrid}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ostree",
    "description": "Version control for binary files similar to `git` but optimized for operating system root filesystems.",
    "syntax": [
      "ostree init --repo {{path/to/repo}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pacaur",
    "description": "A utility for Arch Linux to build and install packages from the Arch User Repository.",
    "syntax": [
      "pacaur -Syu"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "paccache",
    "description": "A `pacman` cache cleaning utility.",
    "syntax": [
      "paccache {{[-r|--remove]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacdiff",
    "description": "Maintenance utility for `.pacorig`, `.pacnew` and `.pacsave` files created by `pacman`.",
    "syntax": [
      "pacdiff"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pacgraph",
    "description": "Draw a graph of installed packages to PNG/SVG/GUI/console.",
    "syntax": [
      "pacgraph"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -D",
    "description": "This command is an alias of `pacman --database`.",
    "syntax": [
      "tldr pacman database"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman --database",
    "description": "Operate on the Arch Linux package database.",
    "syntax": [
      "sudo pacman -D --asdeps {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman --deptest",
    "description": "Check each dependency specified and return a list of dependencies that are not currently satisfied on the system.",
    "syntax": [
      "pacman -T {{package1 package2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -F",
    "description": "This command is an alias of `pacman --files`.",
    "syntax": [
      "tldr pacman files"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pacman --files",
    "description": "Arch Linux package manager utility.",
    "syntax": [
      "sudo pacman -Fy"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman-key",
    "description": "Wrapper script for GnuPG used to manage pacman's keyring.",
    "syntax": [
      "sudo pacman-key --init"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pacman-mirrors",
    "description": "Generate a `pacman` mirrorlist for Manjaro Linux.",
    "syntax": [
      "sudo pacman-mirrors --fasttrack"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -Q",
    "description": "This command is an alias of `pacman --query`.",
    "syntax": [
      "tldr pacman query"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman --query",
    "description": "Arch Linux package manager utility.",
    "syntax": [
      "pacman -Q"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -R",
    "description": "This command is an alias of `pacman --remove`.",
    "syntax": [
      "tldr pacman remove"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman --remove",
    "description": "Arch Linux package manager utility.",
    "syntax": [
      "sudo pacman -Rs {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -S",
    "description": "This command is an alias of `pacman --sync`.",
    "syntax": [
      "tldr pacman sync"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman --sync",
    "description": "Arch Linux package manager utility.",
    "syntax": [
      "sudo pacman -S {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -T",
    "description": "This command is an alias of `pacman --deptest`.",
    "syntax": [
      "tldr pacman deptest"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman -U",
    "description": "This command is an alias of `pacman --upgrade`.",
    "syntax": [
      "tldr pacman upgrade"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman --upgrade",
    "description": "Arch Linux package manager utility.",
    "syntax": [
      "sudo pacman -U {{path/to/package1.pkg.tar.zst}} {{path/to/package2.pkg.tar.zst}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman",
    "description": "Arch Linux package manager utility.",
    "syntax": [
      "sudo pacman -Syu"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacman4console",
    "description": "A text-based console game inspired by the original Pacman.",
    "syntax": [
      "pacman4console"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacstall",
    "description": "An AUR package manager for Ubuntu.",
    "syntax": [
      "pacstall --search {{query}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pacstrap",
    "description": "Install Arch Linux packages in the specified new root directory.",
    "syntax": [
      "pacstrap {{path/to/new/root}} {{base}} {{linux}} {{linux-firmware}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pactree",
    "description": "Package dependency tree viewer for pacman.",
    "syntax": [
      "pactree {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pamac",
    "description": "A command-line utility for the GUI package manager pamac.",
    "syntax": [
      "pamac install {{package_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "parted",
    "description": "A partition manipulation program.",
    "syntax": [
      "sudo parted {{/dev/sdX}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "parted",
    "description": "A partition manipulation program.",
    "syntax": [
      "sudo parted {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "partprobe",
    "description": "Notify the operating system kernel of partition table changes.",
    "syntax": [
      "sudo partprobe"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "partx",
    "description": "Parse a partition table and tell the kernel about it.",
    "syntax": [
      "sudo partx {{[-l|--list]}} {{path/to/device_or_disk_image}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "paru",
    "description": "An AUR helper and pacman wrapper.",
    "syntax": [
      "paru {{package_name_or_search_term}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pasuspender",
    "description": "Temporarily suspends `pulseaudio` while another command is running to allow access to alsa.",
    "syntax": [
      "pasuspender -- {{jackd {{[-d|--driver]}} alsa {{[-d|--device]}} hw:0}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "patool",
    "description": "Archive file manager.",
    "syntax": [
      "patool extract {{path/to/archive}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "paxs",
    "description": "Manage packages across Yay, Flatpak, and Snap.",
    "syntax": [
      "paxs {{search_term}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pct",
    "description": "Manage LXC containers in Proxmox.",
    "syntax": [
      "pct list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pdbedit",
    "description": "Edit the Samba user database.",
    "syntax": [
      "sudo pdbedit --list --verbose"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pdfattach",
    "description": "Add a new attachment (embedded file) to an existing PDF file.",
    "syntax": [
      "pdfattach {{path/to/input.pdf}} {{path/to/file_to_attach}} {{path/to/output.pdf}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pdfcrop",
    "description": "Detect and remove margins in each page in a PDF file.",
    "syntax": [
      "pdfcrop {{path/to/input_file.pdf}} {{path/to/output_file.pdf}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pdfdetach",
    "description": "List or extract attachments (embedded files) from a PDF file.",
    "syntax": [
      "pdfdetach list -enc {{UTF-8}} {{path/to/input.pdf}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pdftohtml",
    "description": "Convert PDF files into HTML, XML and PNG images.",
    "syntax": [
      "pdftohtml {{path/to/file.pdf}} {{path/to/output_file.html}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pdftoppm",
    "description": "Convert PDF document pages to portable Pixmap (image formats).",
    "syntax": [
      "pdftoppm -f {{n}} -l {{m}} {{path/to/file.pdf}} {{image_name_prefix}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pdfxup",
    "description": "N-up PDF pages.",
    "syntax": [
      "pdfxup {{[-o|--output]}} {{path/to/output.pdf}} {{path/to/input.pdf}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "perf",
    "description": "Framework for Linux performance counter measurements.",
    "syntax": [
      "perf stat {{gcc hello.c}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rename",
    "description": "Rename multiple files.",
    "syntax": [
      "rename {{'s/foo/bar/'}} {{*}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pg",
    "description": "View files one page at a time.",
    "syntax": [
      "pg {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "phar",
    "description": "Create, update or extract PHP archives (PHAR).",
    "syntax": [
      "phar add -f {{path/to/phar_file}} {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "photorec",
    "description": "Deleted file recovery tool.",
    "syntax": [
      "sudo photorec {{/dev/sdb}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "phpdismod",
    "description": "Disable PHP extensions on Debian-based OSes.",
    "syntax": [
      "sudo phpdismod {{json}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "phpenmod",
    "description": "Enable PHP extensions on Debian-based OSes.",
    "syntax": [
      "sudo phpenmod {{json}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "phpquery",
    "description": "PHP extension manager for Debian-based OSes.",
    "syntax": [
      "sudo phpquery -V"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "physlock",
    "description": "Lock all consoles and virtual terminals.",
    "syntax": [
      "physlock"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pi",
    "description": "Compute decimal Archimedes' constant Pi.",
    "syntax": [
      "pi"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "picom",
    "description": "Standalone compositor for Xorg.",
    "syntax": [
      "picom &"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pidof",
    "description": "Get the ID of a process using its name.",
    "syntax": [
      "pidof {{bash}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "pidstat",
    "description": "Show system resource usage, including CPU, memory, IO etc.",
    "syntax": [
      "pidstat {{2}} {{10}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "pihole",
    "description": "Manage the Pi-hole ad-blocking DNS server.",
    "syntax": [
      "pihole status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pinout",
    "description": "View the current Raspberry Pi's GPIO pin-out information on the terminal with an ASCII diagram.",
    "syntax": [
      "pinout"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pipewire",
    "description": "Start the PipeWire daemon.",
    "syntax": [
      "pipewire"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pivpn",
    "description": "Easy security-hardened OpenVPN setup and manager.",
    "syntax": [
      "sudo pivpn add"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkcon",
    "description": "Command line client for PackageKit console program used by Discover and Gnome software and alternative to 'apt'.",
    "syntax": [
      "pkcon install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkexec",
    "description": "Execute commands as another user.",
    "syntax": [
      "pkexec {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgadd",
    "description": "Add a package to a CRUX system.",
    "syntax": [
      "pkgadd {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgctl auth",
    "description": "Authenticate `pkgctl` with services like GitLab.",
    "syntax": [
      "pkgctl auth login"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgctl build",
    "description": "Build packages inside a clean `chroot`.",
    "syntax": [
      "pkgctl build"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgctl db update",
    "description": "Update the `pacman` database as final release step for packages that have been transferred and staged on <https://repos.archlinux.org>.",
    "syntax": [
      "pkgctl db update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgctl diff",
    "description": "Compare package files using different modes.",
    "syntax": [
      "pkgctl diff {{[-l|--list]}} {{path/to/file|pkgname}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pkgctl release",
    "description": "Release step to commit, tag and upload build artifacts.",
    "syntax": [
      "pkgctl release --repo {{repository}} --message {{commit_message}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgctl repo",
    "description": "Manage Git packaging repositories and their configuration for Arch Linux.",
    "syntax": [
      "pkgctl repo clone {{pkgname}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgctl",
    "description": "Unified command-line frontend for Arch Linux devtools.",
    "syntax": [
      "tldr pkgctl auth"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgfile",
    "description": "Search files from packages in the official repositories on Arch-based systems.",
    "syntax": [
      "sudo pkgfile --update"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pkginfo",
    "description": "Query the package database on a CRUX system.",
    "syntax": [
      "pkginfo {{[-i|--installed]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgmk",
    "description": "Make a binary package for use with pkgadd on CRUX.",
    "syntax": [
      "pkgmk -d"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pkgrm",
    "description": "Remove a package from a CRUX system.",
    "syntax": [
      "pkgrm {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "plasma-apply-colorscheme",
    "description": "Switch Plasma color scheme.",
    "syntax": [
      "plasma-apply-colorscheme --list-schemes"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "plasma-apply-cursortheme",
    "description": "Switch Plasma cursor theme.",
    "syntax": [
      "plasma-apply-cursortheme --list-themes"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "plasma-apply-desktoptheme",
    "description": "Switch Plasma desktop theme.",
    "syntax": [
      "plasma-apply-desktoptheme --list-themes"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "plasma-apply-lookandfeel",
    "description": "Switch Plasma global themes.",
    "syntax": [
      "plasma-apply-lookandfeel --list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "plasma-apply-wallpaperimage",
    "description": "Switch Plasma wallpaper.",
    "syntax": [
      "plasma-apply-wallpaperimage {{/path/to/image}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "plasmashell",
    "description": "Start and restart Plasma Desktop.",
    "syntax": [
      "systemctl restart --user plasma-plasmashell"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "playerctl",
    "description": "Control media players via MPRIS.",
    "syntax": [
      "playerctl play-pause"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pluma",
    "description": "Edit files in MATE desktop environment.",
    "syntax": [
      "pluma"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pmap",
    "description": "Report memory map of a process or processes.",
    "syntax": [
      "pmap {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pmount",
    "description": "Mount arbitrary hotpluggable devices as a normal user.",
    "syntax": [
      "pmount {{/dev/to/block/device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "po4a-gettextize",
    "description": "Convert a file to a PO file.",
    "syntax": [
      "po4a-gettextize --format {{text}} --master {{path/to/master.txt}} --po {{path/to/result.po}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "po4a-translate",
    "description": "Convert a PO file back to documentation format.",
    "syntax": [
      "po4a-translate --format {{text}} --master {{path/to/master.doc}} --po {{path/to/result.po}} --localized {{path/to/translated.txt}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "po4a-updatepo",
    "description": "Update the translation (in PO format) of a documentation.",
    "syntax": [
      "po4a-updatepo --format {{text}} --master {{path/to/master.txt}} --po {{path/to/result.po}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "po4a",
    "description": "Update both PO files and translated documents.",
    "syntax": [
      "po4a {{path/to/config_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "portablectl",
    "description": "A systemd utility for managing and deploying portable service images on Linux systems.",
    "syntax": [
      "portablectl list"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "portageq",
    "description": "Query for information about Portage, the Gentoo Linux package manager.",
    "syntax": [
      "portageq envvar {{variable}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ports",
    "description": "Update/list the ports tree on a CRUX system.",
    "syntax": [
      "ports -u"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "postconf",
    "description": "Postfix configuration utility.",
    "syntax": [
      "postconf -c {{path/to/configuration_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "postfix",
    "description": "Postfix mail transfer agent (MTA) control program.",
    "syntax": [
      "sudo postfix check"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "poweroff",
    "description": "Power off the system.",
    "syntax": [
      "poweroff"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "powerprofilesctl",
    "description": "Make power profiles handling available over D-Bus.",
    "syntax": [
      "powerprofilesctl list"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "powerstat",
    "description": "Measures the power consumption of a computer that has a battery power source or supports the RAPL interface.",
    "syntax": [
      "powerstat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "powertop",
    "description": "Optimize battery power usage.",
    "syntax": [
      "sudo powertop --calibrate"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rename",
    "description": "Rename multiple files.",
    "syntax": [
      "rename {{'s/foo/bar/'}} {{*}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pridecat",
    "description": "Like cat but more colorful.",
    "syntax": [
      "pridecat {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "prime-run",
    "description": "Run a program using an alternative Nvidia graphics card.",
    "syntax": [
      "prime-run {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "print",
    "description": "An alias to a `run-mailcap`'s action print.",
    "syntax": [
      "print {{filename}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "prlimit",
    "description": "Get or set process resource soft and hard limits.",
    "syntax": [
      "prlimit"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "pro",
    "description": "Manage Ubuntu Pro services.",
    "syntax": [
      "sudo pro attach"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "proctl",
    "description": "Manage projects licenses and languages, switch between templated licenses.",
    "syntax": [
      "proctl {{-ll|-list-licenses}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "protontricks",
    "description": "A simple wrapper that runs Winetricks commands for Proton enabled games.",
    "syntax": [
      "protontricks --gui"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "protonvpn connect",
    "description": "Connect to ProtonVPN.",
    "syntax": [
      "protonvpn {{[c|connect]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "protonvpn",
    "description": "Unofficial third-party ProtonVPN client.",
    "syntax": [
      "protonvpn init"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "prt-get",
    "description": "The CRUX package manager.",
    "syntax": [
      "prt-get install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pstoedit",
    "description": "Convert PDF files into various image formats.",
    "syntax": [
      "pstoedit -page {{page_number}} -f magick {{path/to/file.pdf}} {{page.png|page.jpg]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pstree",
    "description": "A convenient tool to show running processes as a tree.",
    "syntax": [
      "pstree"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "ptx",
    "description": "Generate a permuted index of words from text files.",
    "syntax": [
      "ptx {{[-r|--references]}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pulseaudio",
    "description": "The PulseAudio sound system daemon and manager.",
    "syntax": [
      "pulseaudio --check"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pvcreate",
    "description": "Initialize a disk or partition for use as a physical volume.",
    "syntax": [
      "pvcreate {{/dev/sda1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pvdisplay",
    "description": "Display information about Logical Volume Manager (LVM) physical volumes.",
    "syntax": [
      "sudo pvdisplay"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pve-firewall",
    "description": "Manage Proxmox VE Firewall.",
    "syntax": [
      "pve-firewall compile"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pvecm",
    "description": "Proxmox VE Cluster Manager.",
    "syntax": [
      "pvecm add {{hostname_or_ip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pveperf",
    "description": "A benchmarking tool in Proxmox Server. Gather CPU and hard disk performance data for the hard disk.",
    "syntax": [
      "pveperf"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "pveversion",
    "description": "Proxmox VE version info.",
    "syntax": [
      "pveversion"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pvremove",
    "description": "Remove LVM labels from physical volume(s).",
    "syntax": [
      "sudo pvremove {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pvs",
    "description": "Display information about physical volumes.",
    "syntax": [
      "pvs"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pvscan",
    "description": "List all physical volumes and manage their online status.",
    "syntax": [
      "pvscan"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pw-cat",
    "description": "Play and record audio files through PipeWire.",
    "syntax": [
      "pw-cat {{[-p|--playback]}} {{path/to/file.wav}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pw-cli",
    "description": "Manage a PipeWire instance's modules, objects, nodes, devices, links and much more.",
    "syntax": [
      "pw-cli list-objects Node"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-config",
    "description": "List configuration paths and sections that will be used by the PipeWire server and clients.",
    "syntax": [
      "pw-config"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-dot",
    "description": "Create `.dot` files of the PipeWire graph.",
    "syntax": [
      "pw-dot"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pw-dump",
    "description": "Dump PipeWire's current state as JSON, including the information on nodes, devices, modules, ports, and other objects.",
    "syntax": [
      "pw-dump"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-link",
    "description": "Manage links between ports in PipeWire.",
    "syntax": [
      "pw-link {{[-oiI|--output --input --ids]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-loopback",
    "description": "Create loopback devices in PipeWire.",
    "syntax": [
      "pw-loopback"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-metadata",
    "description": "Monitor, set, and delete metadata on PipeWire objects.",
    "syntax": [
      "pw-metadata"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-mon",
    "description": "Monitor objects on the PipeWire instance.",
    "syntax": [
      "pw-mon"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-play",
    "description": "This command is an alias of `pw-cat --playback`.",
    "syntax": [
      "tldr pw-cat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pw-profiler",
    "description": "Profile a local or remote instance.",
    "syntax": [
      "pw-profiler"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pw-record",
    "description": "This command is an alias of `pw-cat --record`.",
    "syntax": [
      "tldr pw-cat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pw-reserve",
    "description": "Reserve a device for PipeWire.",
    "syntax": [
      "pw-reserve {{[-n|--name]}} {{audioN}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-top",
    "description": "View the PipeWire nodes and devices statistics in real-time.",
    "syntax": [
      "pw-top"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pw-v4l2",
    "description": "Use v4l2 programs within PipeWire.",
    "syntax": [
      "pw-v4l2 {{program}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "pwdx",
    "description": "Print working directory of a process.",
    "syntax": [
      "pwdx {{process_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "pwn",
    "description": "Exploit Development Library designed for rapid prototyping.",
    "syntax": [
      "pwn asm \"{{xor edi, edi}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "pyrit",
    "description": "WPA/WPA2 cracking tool using computational power.",
    "syntax": [
      "pyrit benchmark"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qjoypad",
    "description": "Translate input from gamepads or joysticks into keyboard strokes or mouse actions.",
    "syntax": [
      "qjoypad"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm cleanup",
    "description": "Clean up resources on QEMU/KVM Virtual Machine Manager like tap devices, VGPUs, etc.",
    "syntax": [
      "qm cleanup {{vm_id}} {{clean-shutdown}} {{guest-requested}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm clone",
    "description": "Create a copy of virtual machine on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm copy {{vm_id}} {{new_vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm cloud init",
    "description": "Configure cloudinit settings for virtual machines managed by Proxmox Virtual Environment (PVE).",
    "syntax": [
      "qm cloud-init {{vm_id}} -user={{user}} -password={{password}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm cloudinit dump",
    "description": "Generate cloudinit configuration files.",
    "syntax": [
      "qm cloudinit dump {{virtual_machine_id}} {{meta|network|user}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qm config",
    "description": "Display the virtual machine configuration with pending configuration changes applied.",
    "syntax": [
      "qm config {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm create",
    "description": "Create or restore a virtual machine on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm create {{100}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm delsnapshot",
    "description": "Delete virtual machine snapshots.",
    "syntax": [
      "qm delsnapshot {{vm_id}} {{snapshot_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm destroy",
    "description": "Destroy a virtual machine in QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm destroy {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm disk import",
    "description": "Import a disk image to a virtual machine as an unused disk.",
    "syntax": [
      "qm importdisk {{vm_id}} {{path/to/disk}} {{storage_name}} --format {{qcow2|raw|vmdk}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "qm disk move",
    "description": "Move a virtual disk from one storage to another within the same Proxmox cluster.",
    "syntax": [
      "qm disk move {{vm_id}} {{destination}} {{index}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm disk resize",
    "description": "Resize a virtual machine disk in the Proxmox Virtual Environment (PVE).",
    "syntax": [
      "qm disk resize {{vm_id}} {{disk_name}} +{{n}}G"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm guest cmd",
    "description": "Execute QEMU Guest Agent commands.",
    "syntax": [
      "qm guest cmd {{virtual_machine_id}} {{fsfreeze-freeze|fsfreeze-status|fsfreeze-thaw|fstrim|get-fsinfo|...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm guest exec-status",
    "description": "Print the status of a pid started by the guest-agent on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm guest exec-status {{vm_id}} {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qm guest exec",
    "description": "Execute a specific command via a guest agent.",
    "syntax": [
      "qm guest exec {{vm_id}} {{command}} {{argument1 argument2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm guest passwd",
    "description": "Set the password for a user on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm guest passwd {{vm_id}} {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm help",
    "description": "Display help for a command.",
    "syntax": [
      "qm help {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm import disk",
    "description": "This command is an alias of `qm disk import`.",
    "syntax": [
      "tldr qm disk import"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "qm list",
    "description": "List all virtual machines.",
    "syntax": [
      "qm list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm listsnapshot",
    "description": "List snapshots of virtual machines.",
    "syntax": [
      "qm listsnapshot {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm migrate",
    "description": "Migrate a virtual machine.",
    "syntax": [
      "qm migrate {{vm_id}} {{target}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm monitor",
    "description": "Enter the QEMU Monitor interface.",
    "syntax": [
      "qm monitor {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm move disk",
    "description": "This command is an alias of `qm disk move`.",
    "syntax": [
      "tldr qm disk move"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm move_disk",
    "description": "This command is an alias of `qm disk move`.",
    "syntax": [
      "tldr qm disk move"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm mtunnel",
    "description": "Used by `qmigrate`.",
    "syntax": [
      "qm mtunnel"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm nbdstop",
    "description": "Stop embedded nbd server.",
    "syntax": [
      "qm nbdstop {{VM_ID}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm pending",
    "description": "Get the virtual machine configuration with both current and pending values.",
    "syntax": [
      "qm pending {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm reboot",
    "description": "Reboot a virtual machine by shutting it down, and starting it again after applying pending changes.",
    "syntax": [
      "qm reboot {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qm rescan",
    "description": "Rescan all storages and update disk sizes and unused disk images of a virtual machine.",
    "syntax": [
      "qm rescan {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm reset",
    "description": "Reset a virtual machine on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm reset {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm resize",
    "description": "This command is an alias of `qm disk resize`.",
    "syntax": [
      "tldr qm disk resize"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm resume",
    "description": "Resume a virtual machine.",
    "syntax": [
      "qm resume {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm rollback",
    "description": "Rollback the VM state to a specified snapshot.",
    "syntax": [
      "qm rollback {{vm_id}} {{snap_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm sendkey",
    "description": "Send QEMU monitor encoding key event to a virtual machine.",
    "syntax": [
      "qm sendkey {{vm_id}} {{key}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm showcmd",
    "description": "Show command-line which is used to start the VM (debug info).",
    "syntax": [
      "qm showcmd {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qm shutdown",
    "description": "Shutdown a virtual machine on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm shutdown {{VM_ID}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm snapshot",
    "description": "Create virtual machine snapshots.",
    "syntax": [
      "qm snapshot {{vm_id}} {{snapshot_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm start",
    "description": "Start a virtual machine on QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm start {{100}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qm status",
    "description": "Show virtual machine status.",
    "syntax": [
      "qm status {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm stop",
    "description": "Stop a virtual machine.",
    "syntax": [
      "qm stop {{VM_ID}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm suspend",
    "description": "Suspends a virtual machine (VM) in the Proxmox Virtual Environment (PVE).",
    "syntax": [
      "qm suspend {{vm_id}} {{integer}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm template",
    "description": "Create a Proxmox VM template.",
    "syntax": [
      "qm template {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm unlock",
    "description": "Unlock a virtual machine in QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm unlock {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm vncproxy",
    "description": "Proxy Virtual Machine VNC (Virtual network computing) traffic to `stdin` or `stdout`.",
    "syntax": [
      "qm vncproxy {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "qm wait",
    "description": "Wait until the virtual machine is stopped.",
    "syntax": [
      "qm wait {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qm",
    "description": "QEMU/KVM Virtual Machine Manager.",
    "syntax": [
      "qm list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qmake",
    "description": "Generate Makefiles from Qt project files.",
    "syntax": [
      "qmake"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qmrestore",
    "description": "Restore QemuServer `vzdump` backups.",
    "syntax": [
      "qmrestore {{path/to/vzdump-qemu-100.vma.lzo}} {{100}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qrcp",
    "description": "A file transfer tool.",
    "syntax": [
      "qrcp send {{path/to/file_or_directory path/to/file_directory ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "qsub",
    "description": "Submits a script to the queue management system TORQUE.",
    "syntax": [
      "qsub {{script.sh}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "qtchooser",
    "description": "A wrapper used to select between Qt development binary versions.",
    "syntax": [
      "qtchooser --list-versions"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "qtile",
    "description": "A full-featured, hackable tiling window manager written and configured in Python.",
    "syntax": [
      "qtile start"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "quickemu",
    "description": "Build and manage highly optimised desktop virtual machines quickly.",
    "syntax": [
      "quickemu --vm {{path/to/file.conf}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "quickget",
    "description": "Download and prepare materials for building a Quickemu virtual machine.",
    "syntax": [
      "quickget list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "quotacheck",
    "description": "Scan a filesystem for disk usage; create, check and repair quota files.",
    "syntax": [
      "sudo quotacheck --all"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "radeontop",
    "description": "Show utilization of AMD GPUs.",
    "syntax": [
      "radeontop"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rankmirrors",
    "description": "Rank a list of Pacman mirrors by connection and opening speed.",
    "syntax": [
      "rankmirrors {{/etc/pacman.d/mirrorlist}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "raspi-config",
    "description": "An `ncurses` terminal GUI to config a Raspberry Pi.",
    "syntax": [
      "sudo raspi-config"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "raspinfo",
    "description": "Display Raspberry Pi system information.",
    "syntax": [
      "raspinfo"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "raw",
    "description": "Bind a Unix raw character device.",
    "syntax": [
      "raw /dev/raw/raw{{1}} {{/dev/block_device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rc-service",
    "description": "Locate and run OpenRC services with arguments.",
    "syntax": [
      "rc-service {{service_name}} status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rc-status",
    "description": "Show status info about runlevels.",
    "syntax": [
      "rc-status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rc-update",
    "description": "Add and remove OpenRC services to and from runlevels.",
    "syntax": [
      "rc-update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rcp",
    "description": "Copy files between local and remote systems.",
    "syntax": [
      "rcp {{path/to/local_file}} {{username}}@{{remote_host}}:{{/path/to/destination/}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "rdesktop",
    "description": "Remote Desktop Protocol client.",
    "syntax": [
      "rdesktop -u {{username}} -p {{password}} {{host:port}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "readcd",
    "description": "Read or write Compact Disc media data.",
    "syntax": [
      "readcd dev={{/dev/srX}} f={{path/to/file.iso}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "readelf",
    "description": "Display information about ELF files.",
    "syntax": [
      "readelf -all {{path/to/binary}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "readpe",
    "description": "Display information about PE files.",
    "syntax": [
      "readpe {{path/to/executable}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "reboot",
    "description": "Reboot the system.",
    "syntax": [
      "reboot"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "reflector",
    "description": "Arch script to fetch and sort mirrorlists.",
    "syntax": [
      "sudo reflector --sort {{rate}} --save {{/etc/pacman.d/mirrorlist}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "register_new_matrix_user",
    "description": "Register new users in a home server when registration has been disabled.",
    "syntax": [
      "register_new_matrix_user --config {{path/to/homeserver.yaml}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rename",
    "description": "Rename multiple files.",
    "syntax": [
      "rename {{foo}} {{bar}} {{*}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "renice",
    "description": "Alter the scheduling priority/niceness of running processes.",
    "syntax": [
      "renice --priority {{3}} {{[-p|--pid]}} {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "repo-add",
    "description": "Package database maintenance utility which enables installation of said package via Pacman.",
    "syntax": [
      "repo-add {{path/to/database.db.tar.gz}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "repo-remove",
    "description": "Package database maintenance utility which removes packages from a local repository.",
    "syntax": [
      "repo-remove {{path/to/database.db.tar.gz}} {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "reportbug",
    "description": "Bug report tool of Debian distribution.",
    "syntax": [
      "reportbug {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "repquota",
    "description": "Display a summary of existing file quotas for a filesystem.",
    "syntax": [
      "sudo repquota {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "reptyr",
    "description": "Move a running process to a new terminal.",
    "syntax": [
      "reptyr {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "reset",
    "description": "Reinitialize the current terminal. Clears the entire terminal screen.",
    "syntax": [
      "reset"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "resize",
    "description": "Resize terminal size to the window size.",
    "syntax": [
      "resize"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "resize2fs",
    "description": "Resize an ext2, ext3 or ext4 filesystem.",
    "syntax": [
      "resize2fs {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "resolvectl",
    "description": "Resolve domain names, IPv4 and IPv6 addresses, DNS resource records, and services.",
    "syntax": [
      "resolvectl status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "resolveip",
    "description": "Resolve hostnames to their IP addresses and vice versa.",
    "syntax": [
      "resolveip {{example.org}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "restorecon",
    "description": "Restore SELinux security context on files/directories according to persistent rules.",
    "syntax": [
      "ls {{[-dlZ|--directory -l --context]}} {{path/to/file_or_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "retroarch",
    "description": "A frontend for emulators, game engines and media players.",
    "syntax": [
      "retroarch"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rev",
    "description": "Reverse a line of text or a file.",
    "syntax": [
      "rev"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "rexec",
    "description": "Execute a command on a remote host.",
    "syntax": [
      "rexec {{[-h|--host]}} {{remote_host}} {{ls -l}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rfkill",
    "description": "Enable and disable wireless devices.",
    "syntax": [
      "rfkill"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rig",
    "description": "Utility to piece together a random first name, last name, street number and address, along with a geographically consistent (ie, they all match the same area) city, state, ZIP code, and area code.",
    "syntax": [
      "rig"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ripmime",
    "description": "Extract attachments out of a MIME encoded email package.",
    "syntax": [
      "ripmime -i {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rkhunter",
    "description": "Searches for rootkits and malware.",
    "syntax": [
      "sudo rkhunter --check"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rlogin",
    "description": "Log in to a remote host.",
    "syntax": [
      "rlogin {{remote_host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rmmod",
    "description": "Remove modules from the Linux kernel.",
    "syntax": [
      "sudo rmmod {{module_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rnm",
    "description": "Bulk Rename Utility.",
    "syntax": [
      "rnm -ss {{old}} -rs {{new}} {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rofi",
    "description": "An application launcher and window switcher.",
    "syntax": [
      "rofi -show drun"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rolldice",
    "description": "Roll virtual dice.",
    "syntax": [
      "rolldice d{{20}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpcclient",
    "description": "MS-RPC client tool (part of the samba suite).",
    "syntax": [
      "rpcclient {{[-U|--user]}} {{domain}}\\{{username}}%{{password}} {{ip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpcinfo",
    "description": "Make an RPC call to an RPC server and reports what it finds.",
    "syntax": [
      "rpcinfo"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "rpi-eeprom-update",
    "description": "Update EEPROM and view other EEPROM information.",
    "syntax": [
      "sudo rpi-eeprom-update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpi-otp-private-key",
    "description": "Display the One-Time Programmable (OTP) private key of a Raspberry Pi.",
    "syntax": [
      "rpi-otp-private-key"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpicam-hello",
    "description": "View a live camera stream using a Raspberry Pi camera.",
    "syntax": [
      "rpicam-hello {{[-t|--timeout]}} {{time}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpicam-jpeg",
    "description": "Capture and store a JPEG image using a Raspberry Pi camera.",
    "syntax": [
      "rpicam-jpeg {{[-o|--output]}} {{path/to/file.jpg}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpicam-raw",
    "description": "Capture a raw video on a Raspberry Pi camera.",
    "syntax": [
      "rpicam-raw {{[-t|--timeout]}} {{2000}} {{[-o|--output]}} {{path/to/file.raw}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpicam-still",
    "description": "Capture and store a photo using a Raspberry Pi camera with legacy features missing from `rpicam-jpeg`.",
    "syntax": [
      "rpicam-still {{[-e|--encoding]}} {{bmp|png|rgb|yuv420}} {{[-o|--output]}} {{path/to/file.{{bmp|png|rgb|yuv420}}}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpicam-vid",
    "description": "Capture a video using a Raspberry Pi camera.",
    "syntax": [
      "rpicam-vid {{[-t|--timeout]}} 10000 {{[-o|--output]}} {{path/to/file.h264}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpm-ostree",
    "description": "A hybrid image/package system.",
    "syntax": [
      "rpm-ostree status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpm",
    "description": "RPM Package Manager.",
    "syntax": [
      "rpm --query {{httpd}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpm2cpio",
    "description": "Convert an RPM package to a `cpio` archive.",
    "syntax": [
      "rpm2cpio {{path/to/file.rpm}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpmbuild",
    "description": "RPM Package Build tool.",
    "syntax": [
      "rpmbuild -ba {{path/to/spec_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rpmconf",
    "description": "Handle RPMNEW, RPMSAVE and RPMORIG files left over by package upgrades.",
    "syntax": [
      "sudo rpmconf --all"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "rpmspec",
    "description": "Query a RPM spec file.",
    "syntax": [
      "rpmspec --query {{path/to/rpm.spec}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "rsh",
    "description": "Execute commands on a remote host.",
    "syntax": [
      "rsh {{remote_host}} {{ls -l}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rspamc",
    "description": "Command-line client for rspamd servers.",
    "syntax": [
      "rspamc learn_spam {{path/to/email_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rtcwake",
    "description": "Enter a system sleep state until specified wakeup time relative to your BIOS clock.",
    "syntax": [
      "sudo rtcwake {{[-m|--mode]}} show {{[-v|--verbose]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rtorrent",
    "description": "Download torrents.",
    "syntax": [
      "rtorrent {{torrent_or_magnet}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ruget",
    "description": "Alternative to wget written in Rust.",
    "syntax": [
      "ruget {{https://example.com/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "run-mailcap",
    "description": "Run MailCap Programs.",
    "syntax": [
      "run-mailcap --action=ACTION [--option[=value]]"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "run0",
    "description": "Elevate privileges interactively.",
    "syntax": [
      "run0 {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "runcon",
    "description": "Run a program in a different SELinux security context.",
    "syntax": [
      "runcon"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "runlim",
    "description": "Sample and limit time and memory usage of a program and its child processes using the proc file system on Linux.",
    "syntax": [
      "runlim {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "runuser",
    "description": "Run commands as a user and group without asking for password (needs root privileges).",
    "syntax": [
      "runuser {{user}} {{[-c|--command]}} '{{command}}'"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "rusnapshot",
    "description": "BTRFS snapshotting utility written in Rust.",
    "syntax": [
      "sudo rusnapshot {{[-c|--config]}} {{path/to/config.toml}} --cr"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sa",
    "description": "Summarize accounting information about commands called by users, including basic information on CPU time spent processing and I/O rates.",
    "syntax": [
      "sudo sa"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "sacct",
    "description": "Display accounting data from the Slurm service.",
    "syntax": [
      "sacct"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sacctmgr",
    "description": "View, setup, and manage Slurm accounts.",
    "syntax": [
      "sacctmgr show configuration"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "salloc",
    "description": "Start an interactive shell session or execute a command by allocating one or more nodes in a cluster.",
    "syntax": [
      "salloc"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "sam",
    "description": "AWS Serverless Application Model (SAM) CLI.",
    "syntax": [
      "sam init"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sar",
    "description": "Monitor performance of various Linux subsystems.",
    "syntax": [
      "sar -b {{1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sattach",
    "description": "Attach to a Slurm job step.",
    "syntax": [
      "sattach {{jobid}}.{{stepid}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sbatch",
    "description": "Submit a batch job to the SLURM scheduler.",
    "syntax": [
      "sbatch {{path/to/job.sh}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sbcast",
    "description": "Send a file to a job's allocated nodes.",
    "syntax": [
      "sbcast {{path/to/file}} {{path/to/destination}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "sbctl",
    "description": "A user-friendly secure boot key manager.",
    "syntax": [
      "sbctl status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "scancel",
    "description": "Cancel a Slurm job.",
    "syntax": [
      "scancel {{job_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "scanimage",
    "description": "Scan images with the Scanner Access Now Easy API.",
    "syntax": [
      "scanimage {{[-L|--list-devices]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "schroot",
    "description": "Run a command or start an interactive shell with a different root directory. More customizable than `chroot`.",
    "syntax": [
      "schroot --list"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "scontrol",
    "description": "View information about and modify jobs.",
    "syntax": [
      "scontrol show job {{job_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "screenkey",
    "description": "A screencast tool to display keys pressed.",
    "syntax": [
      "screenkey"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "script",
    "description": "Record all terminal output to a typescript file.",
    "syntax": [
      "script"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "scriptlive",
    "description": "Execute a typescript created by the `script` command in real-time.",
    "syntax": [
      "scriptlive {{path/to/timing_file}} {{path/to/typescript}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "scriptreplay",
    "description": "Replay a typescript created by the `script` command to `stdout`.",
    "syntax": [
      "scriptreplay {{path/to/timing_file}} {{path/to/typescript}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "scrontab",
    "description": "Manage Slurm crontab files.",
    "syntax": [
      "scrontab {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "scrot",
    "description": "Screen capture utility.",
    "syntax": [
      "scrot"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sdiag",
    "description": "Show information about the execution of `slurmctld`.",
    "syntax": [
      "sdiag {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "secon",
    "description": "Get the SELinux security context of a file, pid, current execution context, or a context specification.",
    "syntax": [
      "secon"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "secret-tool",
    "description": "Store and retrieve passwords, part of the `libsecret` package.",
    "syntax": [
      "secret-tool store --label={{label}} {{key}} {{value}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sed",
    "description": "Edit text in a scriptable manner.",
    "syntax": [
      "{{command}} | sed 's/apple/mango/g'"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "see",
    "description": "Alias to `run-mailcap`'s view.",
    "syntax": [
      "see {{filename}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "semanage boolean",
    "description": "Manage persistent SELinux boolean settings.",
    "syntax": [
      "sudo semanage boolean {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "semanage fcontext",
    "description": "Manage persistent SELinux security context rules on files/directories.",
    "syntax": [
      "sudo semanage fcontext {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "semanage permissive",
    "description": "Manage persistent SELinux permissive domains.",
    "syntax": [
      "sudo semanage permissive {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "semanage port",
    "description": "Manage persistent SELinux port definitions.",
    "syntax": [
      "sudo semanage port {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "semanage",
    "description": "SELinux persistent policy management tool.",
    "syntax": [
      "sudo semanage boolean {{[-m|--modify]}} {{-1|--on|-0|--off}} {{haproxy_connect_any}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sensible-browser",
    "description": "Open the default browser.",
    "syntax": [
      "sensible-browser"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sensible-editor",
    "description": "Open the default editor.",
    "syntax": [
      "sensible-editor {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sensors",
    "description": "Report sensors information.",
    "syntax": [
      "sensors"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "service",
    "description": "Manage services by running init scripts.",
    "syntax": [
      "service --status-all"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "sestatus",
    "description": "Print the current SELinux status.",
    "syntax": [
      "sestatus"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "setcap",
    "description": "Set capabilities of specified file.",
    "syntax": [
      "setcap '{{cap_net_raw}}' {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "setenforce",
    "description": "Toggle SELinux between enforcing and permissive modes.",
    "syntax": [
      "setenforce {{1|Enforcing}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "setfacl",
    "description": "Set file access control lists (ACL).",
    "syntax": [
      "setfacl {{[-m|--modify]}} u:{{username}}:rw {{path/to/file_or_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "setfattr",
    "description": "Set extended file attributes.",
    "syntax": [
      "setfattr {{[-n|--name]}} user.{{attribute_name}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "setfont",
    "description": "Set the terminal font for TTYs.",
    "syntax": [
      "setfont {{font}}.gz"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "setsebool",
    "description": "Set SELinux boolean value.",
    "syntax": [
      "getsebool -a"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "setserial",
    "description": "Read and modify serial port information.",
    "syntax": [
      "setserial -a {{/dev/cuaN}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "setsid",
    "description": "Run a program in a new session if the calling process is not a process group leader.",
    "syntax": [
      "setsid {{program}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "setxkbmap",
    "description": "Set the keyboard using the X Keyboard Extension.",
    "syntax": [
      "setxkbmap {{fr}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sfdisk",
    "description": "Display or manipulate a disk partition table.",
    "syntax": [
      "sudo sfdisk {{[-d|--dump]}} {{path/to/device}} > {{path/to/file.dump}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "sfill",
    "description": "Securely overwrite the free space and inodes of the partition where the specified directory resides.",
    "syntax": [
      "sfill {{/path/to/mounted_disk_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "sh5util",
    "description": "Merge HDF5 files produced by the `sacct_gather_profile` plugin.",
    "syntax": [
      "sh5util {{[-j|--jobs]}} {{job_id|job_id.step_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "shar",
    "description": "Create a shell archive.",
    "syntax": [
      "shar {{[-V|--vanilla-operation]}} {{path/to/file1 path/to/file2 ...}} > {{path/to/archive.sh}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sherlock",
    "description": "Find usernames across social networks.",
    "syntax": [
      "sherlock {{username}} --output {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "shiny-mirrors",
    "description": "Generate a `pacman` mirror list for Manjaro Linux.",
    "syntax": [
      "shiny-mirrors status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "shnsplit",
    "description": "Splits audio files according to a `.cue` file.",
    "syntax": [
      "shnsplit -f {{path/to/file.cue}} {{path/to/file.wav}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "shntool split",
    "description": "This command is an alias of `shnsplit`.",
    "syntax": [
      "tldr shnsplit"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "showkey",
    "description": "Display the keycode of pressed keys on the keyboard, helpful for debugging keyboard-related issues and key remapping.",
    "syntax": [
      "sudo showkey"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "shutdown",
    "description": "Shutdown and reboot the system.",
    "syntax": [
      "shutdown -h now"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sic",
    "description": "Simple IRC client.",
    "syntax": [
      "sic"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "silentcast",
    "description": "Silent screencast creator. Saves in `.mkv` and animated GIF formats.",
    "syntax": [
      "silentcast"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sinfo",
    "description": "View information about Slurm nodes and partitions.",
    "syntax": [
      "sinfo {{[-s|--summarize]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "size",
    "description": "Display the sizes of sections inside binary files.",
    "syntax": [
      "size {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "slapt-get",
    "description": "An `apt` like system for Slackware package management.",
    "syntax": [
      "slapt-get --update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slapt-src",
    "description": "A utility to automate building of slackbuilds.",
    "syntax": [
      "slapt-src {{[-u|--update]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sleep",
    "description": "Delay for a specified amount of time.",
    "syntax": [
      "sleep {{seconds}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slop",
    "description": "Get a selection of the screen.",
    "syntax": [
      "slop"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slurmctld",
    "description": "Monitor all other Slurm daemons and resources, accept work (jobs), and allocate resources to those jobs.",
    "syntax": [
      "slurmctld -c"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slurmd",
    "description": "Monitors all tasks running on the compute node, accepts tasks, launches tasks, and kills running tasks upon request.",
    "syntax": [
      "slurmd -b"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slurmdbd",
    "description": "A secure enterprise-wide interface to a database for Slurm.",
    "syntax": [
      "slurmdbd -n {{value}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slurmrestd",
    "description": "Interface to Slurm via REST API. It can be used in two modes: *Inetd Mode* & *Listen Mode*.",
    "syntax": [
      "slurmrestd -g {{group_id}} {{[host]:port | unix:/path/to/socket}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slurmstepd",
    "description": "Slurm daemon for managing and monitoring individual job steps within a multi-step job.",
    "syntax": [
      "slurmstepd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "slurp",
    "description": "Select a region in a Wayland compositor.",
    "syntax": [
      "slurp"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sm",
    "description": "Display a short message fullscreen.",
    "syntax": [
      "sm \"{{Hello World!}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "smbcacls",
    "description": "View and manipulate Windows ACLs on SMB shares.",
    "syntax": [
      "smbcacls //{{server}}/{{share}} {{path/to/file_or_directory}} --user {{domain\\\\username}}%{{password}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "smbclient",
    "description": "FTP-like client to access SMB/CIFS resources on servers.",
    "syntax": [
      "smbclient {{//server/share}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "smbget",
    "description": "`wget`-like utility for downloading files from SMB servers.",
    "syntax": [
      "smbget {{smb://server/share/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "smbnetfs",
    "description": "Mount SMB shares interactively.",
    "syntax": [
      "smbnetfs {{mountpoint}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "smbpasswd",
    "description": "Add/remove a Samba user or change its password.",
    "syntax": [
      "smbpasswd"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "smem",
    "description": "Print memory usage for programs.",
    "syntax": [
      "smem"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "snake4",
    "description": "Snake game in the terminal.",
    "syntax": [
      "snake4"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "snake4scores",
    "description": "Show the high scores from the snake4 game.",
    "syntax": [
      "snake4scores"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "snap",
    "description": "Manage the \"snap\" self-contained software packages.",
    "syntax": [
      "snap find {{query}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "snapper",
    "description": "Filesystem snapshot management tool.",
    "syntax": [
      "snapper list-configs"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "sockstat",
    "description": "List open Internet or UNIX domain sockets.",
    "syntax": [
      "sockstat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "speaker-test",
    "description": "Speaker test tone generator for ALSA.",
    "syntax": [
      "speaker-test"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "spectre-meltdown-checker",
    "description": "Spectre and Meltdown mitigation detection tool.",
    "syntax": [
      "sudo spectre-meltdown-checker"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "speedometer",
    "description": "Python script that shows a network traffic graph in the terminal.",
    "syntax": [
      "speedometer -r {{eth0}} -t {{eth0}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "speedread",
    "description": "A simple terminal-based open source Spritz-alike.",
    "syntax": [
      "cat {{path/to/file.txt}} | speedread -wpm {{250}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "spi",
    "description": "A meta package manager that handles both packages and slackbuilds.",
    "syntax": [
      "spi {{[-u|--update]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sport",
    "description": "Search and install SlackBuilds.",
    "syntax": [
      "sudo mkdir {{[-p|--parents]}} /usr/ports && sudo rsync {{[-av|--archive --verbose]}} rsync://slackbuilds.org /slackbuilds/$(awk '{print $2}' /etc/slackware-version)/ /usr/ports/"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sprio",
    "description": "View the factors determining a job's scheduling priority.",
    "syntax": [
      "sprio"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sqfscat",
    "description": "Concatenate files from a squashfs filesystem and print them to `stdout`.",
    "syntax": [
      "sqfscat {{filesystem.squashfs}} {{file1 file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "sqfstar",
    "description": "Create a squashfs filesystem from a tar archive.",
    "syntax": [
      "sqfstar {{filesystem.squashfs}} < {{archive.tar}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "squeue",
    "description": "View the jobs queued in the SLURM scheduler.",
    "syntax": [
      "squeue"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sreport",
    "description": "Generate reports on jobs, users, and clusters from accounting data.",
    "syntax": [
      "sreport {{[-p|--parsable]}} cluster utilization"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "srun",
    "description": "Create an interactive slurm job or connect to an existing job.",
    "syntax": [
      "srun --pty /bin/bash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ss",
    "description": "Utility to investigate sockets.",
    "syntax": [
      "ss {{[-a|--all]}} {{-t|-u|-w|-x}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sshare",
    "description": "List the shares of associations to a cluster.",
    "syntax": [
      "sshare"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sslstrip",
    "description": "Perform Moxie Marlinspike's Secure Sockets Layer (SSL) stripping attacks.",
    "syntax": [
      "sslstrip"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "sstat",
    "description": "View information about running jobs.",
    "syntax": [
      "sstat {{[-j|--jobs]}} {{job_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "st",
    "description": "A simple terminal emulator for the X Window System.",
    "syntax": [
      "st"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "startx",
    "description": "A front-end to `xinit` that provides a nice user interface for running a single session of the X Window System.",
    "syntax": [
      "startx"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "steamos-add-to-steam",
    "description": "Add a program to Steam library.",
    "syntax": [
      "steamos-add-to-steam {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "steamos-chroot",
    "description": "Switch root directory in a SteamOS environment.",
    "syntax": [
      "steamos-chroot {{[-p|--partset]}} other"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "steamos-dump-info",
    "description": "View SteamOS system information.",
    "syntax": [
      "sudo steamos-dump-info"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "steamos-readonly",
    "description": "Set the readonly status of the filesystem.",
    "syntax": [
      "sudo steamos-readonly disable"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "steamos-select-branch",
    "description": "Select a SteamOS system release branch.",
    "syntax": [
      "steamos-select-branch -c"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "steamos-session-select",
    "description": "Manipulate which session is currently in use.",
    "syntax": [
      "steamos-session-select plasma"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "steamos-update",
    "description": "Update SteamOS.",
    "syntax": [
      "steamos-update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "steghide",
    "description": "Steganography tool for JPEG, BMP, WAV and AU file formats.",
    "syntax": [
      "steghide embed {{[-cf|--coverfile]}} {{path/to/image.png}} {{[-ef|--embedfile]}} {{path/to/data.txt}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "stegsnow",
    "description": "Steganography tool for concealing and extracting messages in text files encoded as tabs and spaces.",
    "syntax": [
      "stegsnow {{path/to/file.txt}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "strace",
    "description": "Troubleshooting tool for tracing system calls.",
    "syntax": [
      "strace {{[-p|--attach]}} {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "stress",
    "description": "Stress test CPU, memory, and IO on a Linux system.",
    "syntax": [
      "stress {{[-c|--cpu]}} {{4}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "strigger",
    "description": "View or modify Slurm trigger information.",
    "syntax": [
      "strigger --set --{{primary_database_failure|primary_slurmdbd_failure|primary_slurmctld_acct_buffer_full|primary_slurmctld_failure|...}} {{[-p|--program]}} {{path/to/executable}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "strip",
    "description": "Discard symbols from executables or object files.",
    "syntax": [
      "strip {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "su",
    "description": "Switch shell to another user.",
    "syntax": [
      "su"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sview",
    "description": "Start a GUI to view and modify the state of Slurm.",
    "syntax": [
      "sview"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "swaks",
    "description": "Swiss Army Knife SMTP, the all-purpose SMTP transaction tester.",
    "syntax": [
      "swaks {{[-t|--to]}} {{user@example.com}} {{[-s|--server]}} {{test-server.example.net}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "swaplabel",
    "description": "Print or change the label or UUID of a swap area.",
    "syntax": [
      "swaplabel {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "swapoff",
    "description": "Disable devices and files for swapping.",
    "syntax": [
      "swapoff {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "swapon",
    "description": "Enable devices and files for swapping.",
    "syntax": [
      "swapon"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "switch_root",
    "description": "Use a different filesystem as the root of the mount tree.",
    "syntax": [
      "switch_root {{new_root}} {{/sbin/init}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "swupd",
    "description": "Package management utility for Clear Linux.",
    "syntax": [
      "sudo swupd update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "swww",
    "description": "Efficient animated wallpaper daemon for Wayland.",
    "syntax": [
      "swww img {{path/to/image}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sxiv",
    "description": "Simple X Image Viewer.",
    "syntax": [
      "sxiv {{path/to/image}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "synopkg",
    "description": "Package management utility for Synology DiskStation Manager.",
    "syntax": [
      "synopkg list --name"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "synoupgrade",
    "description": "Upgrade Synology DiskStation Manager (DSM) - the Synology NAS operating system.",
    "syntax": [
      "sudo synoupgrade --check"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sysctl",
    "description": "List and change kernel runtime variables.",
    "syntax": [
      "sysctl {{[-a|--all]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "sysdig",
    "description": "System troubleshooting, analysis and exploration.",
    "syntax": [
      "sysdig"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemctl disable",
    "description": "Disable systemd services.",
    "syntax": [
      "systemctl disable {{unit}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemctl enable",
    "description": "Enable systemd services.",
    "syntax": [
      "systemctl enable {{unit}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemctl reboot",
    "description": "Reboot the system.",
    "syntax": [
      "systemctl reboot"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemctl",
    "description": "Control the systemd system and service manager.",
    "syntax": [
      "systemctl status"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-ac-power",
    "description": "Report whether the computer is connected to an external power source.",
    "syntax": [
      "systemd-ac-power"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "systemd-analyze",
    "description": "Analyze and debug system manager.",
    "syntax": [
      "systemd-analyze"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-ask-password",
    "description": "Query the user for a system password.",
    "syntax": [
      "systemd-ask-password \"{{prompt}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-cat",
    "description": "Connect a pipeline or program's output streams with the systemd journal.",
    "syntax": [
      "systemd-cat {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "systemd-cgls",
    "description": "Show the contents of the selected Linux control group hierarchy in a tree.",
    "syntax": [
      "systemd-cgls"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-cgtop",
    "description": "Show the top control groups of the local Linux control group hierarchy, ordered by their CPU, memory, or disk I/O load.",
    "syntax": [
      "systemd-cgtop"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "systemd-confext",
    "description": "This command is an alias of `systemd-sysext`.",
    "syntax": [
      "tldr systemd-sysext"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-creds",
    "description": "List, show, encrypt and decrypt service credentials.",
    "syntax": [
      "systemd-creds encrypt --name {{name}} {{path/to/input_file}} {{path/to/output}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-cryptenroll",
    "description": "Interactively enroll or remove methods used to unlock LUKS2-encrypted devices. Uses a password to unlock the device unless otherwise specified.",
    "syntax": [
      "systemd-cryptenroll --password {{path/to/luks2_block_device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-cryptsetup",
    "description": "Create or remove decrypted mappings of encrypted volumes. Equivalent of `cryptsetup open` and `cryptsetup close`.",
    "syntax": [
      "systemd-cryptsetup attach {{mapping_name}} {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-delta",
    "description": "Find overridden systemd-related configuration files.",
    "syntax": [
      "systemd-delta"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "systemd-detect-virt",
    "description": "Detect execution in a virtualized environment.",
    "syntax": [
      "systemd-detect-virt --list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-dissect",
    "description": "Introspect and interact with file system OS disk images, specifically Discoverable Disk Images (DDIs).",
    "syntax": [
      "systemd-dissect {{path/to/image.raw}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "systemd-escape",
    "description": "Escape strings for usage in systemd unit names.",
    "syntax": [
      "systemd-escape {{text}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-firstboot",
    "description": "Initialize basic system settings on or before the first boot-up of a system.",
    "syntax": [
      "sudo systemd-firstboot --root {{path/to/root_directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-hwdb",
    "description": "Hardware database management tool.",
    "syntax": [
      "systemd-hwdb update"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-id128",
    "description": "Generate and print sd-128 identifiers.",
    "syntax": [
      "systemd-id128 new"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-inhibit",
    "description": "Prohibit the system from entering certain power states.",
    "syntax": [
      "systemd-inhibit --list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-machine-id-setup",
    "description": "Initialize the machine ID stored in `/etc/machine-id` at install time with a provisioned or randomly generated ID.",
    "syntax": [
      "systemd-machine-id-setup --print"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-mount",
    "description": "Establish and destroy transient mount or auto-mount points.",
    "syntax": [
      "systemd-mount {{path/to/file_or_device}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-notify",
    "description": "Notify the service manager about start-up completion and other daemon status changes.",
    "syntax": [
      "systemd-notify --booted"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "systemd-nspawn",
    "description": "Spawn a command or OS in a lightweight container.",
    "syntax": [
      "systemd-nspawn {{[-D|--directory]}} {{path/to/container_root}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-path",
    "description": "List and query system and user paths.",
    "syntax": [
      "systemd-path"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-repart",
    "description": "Automatically grow and add partitions.",
    "syntax": [
      "systemd-repart"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-resolve",
    "description": "Resolve domain names, IPV4 and IPv6 addresses, DNS resource records, and services.",
    "syntax": [
      "tldr resolvectl"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "systemd-run",
    "description": "Run programs in transient scope units, service units, or path-, socket-, or timer-triggered service units.",
    "syntax": [
      "sudo systemd-run {{command}} {{argument1 argument2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-socket-activate",
    "description": "Socket activation for systemd services.",
    "syntax": [
      "systemd-socket-activate {{path/to/socket.service}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-stdio-bridge",
    "description": "Implement a proxy between `stdin`/`stdout` and a D-Bus.",
    "syntax": [
      "systemd-stdio-bridge"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-sysext",
    "description": "Activate or deactivate system extension images.",
    "syntax": [
      "systemd-sysext list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-sysusers",
    "description": "Create system users and groups.",
    "syntax": [
      "systemd-sysusers {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemd-tmpfiles",
    "description": "Create, delete and clean up volatile and temporary files and directories.",
    "syntax": [
      "systemd-tmpfiles --create"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "systemd-tty-ask-password-agent",
    "description": "List or process pending systemd password requests.",
    "syntax": [
      "systemd-tty-ask-password-agent --list"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "systemd-umount",
    "description": "This command is an alias of `systemd-mount --umount`.",
    "syntax": [
      "tldr systemd-mount"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systemsettings",
    "description": "KDE central settings program.",
    "syntax": [
      "systemsettings"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "systool",
    "description": "View system device information by bus, and classes.",
    "syntax": [
      "systool -b {{bus}} -v"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tailf",
    "description": "This command has been superseded by `tail -f`.",
    "syntax": [
      "tldr tail"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "talk",
    "description": "A visual communication program which copies lines from your terminal to that of another user.",
    "syntax": [
      "talk {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "taskset",
    "description": "Get or set a process' CPU affinity or start a new process with a defined CPU affinity.",
    "syntax": [
      "taskset {{[-p|--pid]}} {{[-c|--cpu-list]}} {{pid}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "tc",
    "description": "Show/manipulate traffic control settings.",
    "syntax": [
      "sudo tc {{[q|qdisc]}} {{[a|add]}} dev {{eth0}} root netem delay {{delay_in_milliseconds}}ms"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "tcpflow",
    "description": "Capture TCP traffic for debugging and analysis.",
    "syntax": [
      "tcpflow -c -i {{eth0}} port {{80}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tcpick",
    "description": "Packet sniffing and network traffic analysis tool.",
    "syntax": [
      "sudo tcpick {{[-i|--interface]}} {{interface}} {{[-C|--colors]}} -h {{host}} -p {{port}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "tcpkill",
    "description": "Kill specified in-progress TCP connections.",
    "syntax": [
      "tcpkill -i {{eth1}} host {{192.95.4.27}} and port {{2266}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tcptraceroute",
    "description": "A traceroute implementation using TCP packets.",
    "syntax": [
      "tcptraceroute {{host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "telinit",
    "description": "Change SysV runlevel.",
    "syntax": [
      "telinit 0"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "terminator",
    "description": "Arrange multiple GNOME terminals in one window.",
    "syntax": [
      "terminator"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "termusic",
    "description": "A terminal music player written in Rust that uses vim-like key bindings.",
    "syntax": [
      "termusic {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "terraria",
    "description": "Create and start a headless Terraria server.",
    "syntax": [
      "{{path/to/TerrariaServer}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "tftp",
    "description": "Trivial File Transfer Protocol client.",
    "syntax": [
      "tftp {{server_ip}} {{port}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "thunar",
    "description": "Graphical file manager for XFCE desktop environments.",
    "syntax": [
      "thunar"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "tic",
    "description": "Compile terminfo and install for ncurses.",
    "syntax": [
      "tic -xe {{terminal}} {{path/to/terminal.info}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "timedatectl",
    "description": "Control the system time and date.",
    "syntax": [
      "timedatectl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "timeshift",
    "description": "System restore utility.",
    "syntax": [
      "sudo timeshift --list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tlp-stat",
    "description": "Generate TLP status reports.",
    "syntax": [
      "sudo tlp-stat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "tlp",
    "description": "Advanced power management for Linux.",
    "syntax": [
      "sudo tlp start"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tmt run",
    "description": "Execute tmt test steps. By default, all steps are run.",
    "syntax": [
      "tmt run"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tmt try",
    "description": "Quickly experiment with tests and environments.",
    "syntax": [
      "tmt try"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tmt",
    "description": "Test Management Tool for creating, running, and debugging tests.",
    "syntax": [
      "tmt"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tod",
    "description": "A tiny Todoist client in Rust.",
    "syntax": [
      "tod project import"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "togglesebool",
    "description": "Flip the current (non-persistent) values of SELinux booleans.",
    "syntax": [
      "sudo togglesebool {{virt_use_samba virt_use_usb ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "toilet",
    "description": "Display ASCII-art fonts.",
    "syntax": [
      "toilet {{input_text}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tomb",
    "description": "Manage encrypted storage directories that can be safely transported and hidden in a filesystem.",
    "syntax": [
      "tomb dig -s {{100}} {{encrypted_directory.tomb}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "toolbox create",
    "description": "Create a new `toolbox` container.",
    "syntax": [
      "toolbox create {{[-d|--distro]}} {{distribution}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox enter",
    "description": "Enter a `toolbox` container for interactive use.",
    "syntax": [
      "toolbox enter {{[-d|--distro]}} {{distribution}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox help",
    "description": "Display help information about `toolbox`.",
    "syntax": [
      "toolbox help"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox init-container",
    "description": "Initialize a running `toolbox` container.",
    "syntax": [
      "toolbox init-container --gid {{gid}} --home {{home}} --home-link --media-link --mnt-link --monitor-host --shell {{shell}} --uid {{uid}} --user {{user}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox list",
    "description": "List existing `toolbox` containers and images.",
    "syntax": [
      "toolbox list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox rm",
    "description": "Remove one or more `toolbox` containers.",
    "syntax": [
      "toolbox rm {{container_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox rmi",
    "description": "Remove `toolbox` images.",
    "syntax": [
      "toolbox rmi {{image_name1 image_name2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox run",
    "description": "Run a command in an existing `toolbox` container.",
    "syntax": [
      "toolbox run {{[-c|--container]}} {{container_name}} {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "toolbox",
    "description": "Manage containerized command-line environments on Linux.",
    "syntax": [
      "toolbox {{subcommand}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "top",
    "description": "Display dynamic real-time information about running processes.",
    "syntax": [
      "top"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "tor",
    "description": "Enable anonymous communication through the Tor network.",
    "syntax": [
      "tor"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "torify",
    "description": "Route network traffic through the Tor network.",
    "syntax": [
      "torify {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "torsocks",
    "description": "Route the traffic of any application through the Tor network.",
    "syntax": [
      "torsocks {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "trace-cmd",
    "description": "Utility to interact with the Ftrace Linux kernel internal tracer.",
    "syntax": [
      "trace-cmd stat"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tracepath",
    "description": "Trace the path to a network host discovering MTU along this path.",
    "syntax": [
      "tracepath -p {{33434}} {{host}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "trap",
    "description": "Execute a command upon an event.",
    "syntax": [
      "trap -l"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trash-empty",
    "description": "This command has been moved to `trash`.",
    "syntax": [
      "tldr trash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trash-list",
    "description": "This command has been moved to `trash`.",
    "syntax": [
      "tldr trash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trash-put",
    "description": "This command is an alias of `trash`.",
    "syntax": [
      "tldr trash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trash-restore",
    "description": "This command has been moved to `trash`.",
    "syntax": [
      "tldr trash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trash-rm",
    "description": "This command has been moved to `trash`.",
    "syntax": [
      "tldr trash"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trash",
    "description": "Manage the trashcan/recycling bin.",
    "syntax": [
      "trash {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trashy",
    "description": "An alternative to `rm` and `trash-cli` written in Rust.",
    "syntax": [
      "trash {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trayer",
    "description": "A lightweight GTK-2 based systray.",
    "syntax": [
      "trayer"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "treetime",
    "description": "TreeTime provides routines for ancestral sequence reconstruction and inference of molecular-clock phylogenies.",
    "syntax": [
      "treetime ancestral"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trizen",
    "description": "Arch Linux utility for building packages from the Arch User Repository (AUR).",
    "syntax": [
      "trizen -Syua"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "trust",
    "description": "Operate on the trust policy store.",
    "syntax": [
      "trust list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tshark",
    "description": "Packet analysis tool, CLI version of Wireshark.",
    "syntax": [
      "tshark"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ttyplot",
    "description": "A realtime plotting utility for the command-line with data input from `stdin`.",
    "syntax": [
      "{ echo {{1 2 3}}; cat; } | ttyplot"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tune.exfat",
    "description": "Adjust tunable filesystem parameters on an exFAT filesystem.",
    "syntax": [
      "tune.exfat {{[-l|--print-label]}} {{/dev/sdXY}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "tune2fs",
    "description": "Adjust parameters of an ext2, ext3 or ext4 filesystem.",
    "syntax": [
      "tune2fs -c 2 {{/dev/sdXN}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "tuned-adm",
    "description": "Manage and optimize system performance tuning profiles on Linux.",
    "syntax": [
      "tuned-adm list"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "tunelp",
    "description": "Set various parameters for parallel port devices for troubleshooting or for better performance.",
    "syntax": [
      "tunelp {{[-s|--status]}} {{/dev/lp0}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "turbostat",
    "description": "Report processor topology, frequency, temperature, power, and idle statistics.",
    "syntax": [
      "sudo turbostat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "tuxi",
    "description": "Scrape Google search results and SERPs and provide instant and concise answers.",
    "syntax": [
      "tuxi {{search_terms}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "tzselect",
    "description": "Interactively select timezone.",
    "syntax": [
      "tzselect"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ubuntu-bug",
    "description": "This command is an alias of `apport-bug`.",
    "syntax": [
      "tldr apport-bug"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ubuntu-drivers",
    "description": "Install drivers on Ubuntu.",
    "syntax": [
      "sudo ubuntu-drivers list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ubuntu-security-status",
    "description": "Display information about security support for installed Ubuntu packages.",
    "syntax": [
      "ubuntu-security-status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ubus",
    "description": "Interact with an OpenWrt ubusd server.",
    "syntax": [
      "ubus list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "uci",
    "description": "Manage OpenWrt configuration files.",
    "syntax": [
      "uci get {{network.lan.ipaddr}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "udevadm",
    "description": "Linux `udev` management tool.",
    "syntax": [
      "sudo udevadm monitor"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "udisksctl",
    "description": "Interact with `udisksd` to query and manipulate storage devices.",
    "syntax": [
      "udisksctl status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "ufw",
    "description": "Uncomplicated Firewall.",
    "syntax": [
      "ufw enable"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ul",
    "description": "Underline a text.",
    "syntax": [
      "ul {{file.txt}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "umount",
    "description": "Unlink a filesystem from its mount point, making it no longer accessible.",
    "syntax": [
      "umount {{path/to/device_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "uname26",
    "description": "This command is an alias of `setarch uname26`.",
    "syntax": [
      "tldr setarch"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "uncompress",
    "description": "Uncompress files compressed using the Unix `compress` command.",
    "syntax": [
      "uncompress {{path/to/file1.Z path/to/file2.Z ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "unix2dos",
    "description": "Change Unix-style line endings to DOS-style.",
    "syntax": [
      "unix2dos {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "unix2mac",
    "description": "Change Unix-style line endings to macOS-style.",
    "syntax": [
      "unix2mac {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "umount",
    "description": "The correct command is `umount` (u-mount).",
    "syntax": [
      "tldr umount"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "unopkg",
    "description": "LibreOffice extensions manager.",
    "syntax": [
      "unopkg add {{path/to/extension}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "unshadow",
    "description": "Utility provided by the John the Ripper project to obtain the traditional Unix password file if the system uses shadow passwords.",
    "syntax": [
      "sudo unshadow /etc/passwd /etc/shadow"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "unshare",
    "description": "Execute a command in new user-defined namespaces.",
    "syntax": [
      "unshare {{[-n|--net]}} {{command}} {{command_arguments}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "unsquashfs",
    "description": "Uncompress, extract and list files in squashfs filesystems.",
    "syntax": [
      "unsquashfs {{filesystem.squashfs}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "unzipsfx",
    "description": "Create a self-extracting compressed binary file by prepending self-extracting stubs on a Zip file.",
    "syntax": [
      "cat unzipsfx {{path/to/archive.zip}} > {{filename}} && chmod 755 {{filename}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "update-alternatives",
    "description": "Convenientily maintain symbolic links to determine default commands.",
    "syntax": [
      "sudo update-alternatives --install {{path/to/symlink}} {{command_name}} {{path/to/command_binary}} {{priority}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "update-rc.d",
    "description": "Install and remove services which are System-V style init script links.",
    "syntax": [
      "update-rc.d {{mysql}} defaults"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "updatedb",
    "description": "Create or update the database used by `locate`.",
    "syntax": [
      "sudo updatedb"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "updpkgsums",
    "description": "Update the checksums of the sources in a `PKGBUILD`.",
    "syntax": [
      "updpkgsums"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "upnpc",
    "description": "Configure port forwarding rules on your router via the UPnP protocol.",
    "syntax": [
      "upnpc -a {{192.168.0.1}} 8080 80 tcp"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "upower",
    "description": "System utility to provide power and battery information and statistics.",
    "syntax": [
      "upower {{[-d|--dump]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "uprecords",
    "description": "Display a summary of historical uptime records.",
    "syntax": [
      "uprecords"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urpme",
    "description": "Uninstall packages in Mageia.",
    "syntax": [
      "sudo urpme {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urpmf",
    "description": "Find files in packages and query information about them in Mageia.",
    "syntax": [
      "urpmf {{filename}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "urpmi.addmedia",
    "description": "Add media in Mageia.",
    "syntax": [
      "sudo urpmi.addmedia {{medium}} {{ftp://ftp.site.com/path/to/Mageia/RPMS}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urpmi",
    "description": "Install packages in Mageia.",
    "syntax": [
      "sudo urpmi {{package|path/to/file.rpm}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urpmi.removemedia",
    "description": "Remove media in Mageia.",
    "syntax": [
      "sudo urpmi.removemedia {{medium}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urpmi.update",
    "description": "Update the list of packages from a package repository in Mageia.",
    "syntax": [
      "urpmi.update -a"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urpmq",
    "description": "Query information about packages and media in Mageia.",
    "syntax": [
      "urpmq -i {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "urxvt",
    "description": "Rxvt-unicode.",
    "syntax": [
      "urxvt"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "usbip",
    "description": "Use USB devices remotely.",
    "syntax": [
      "usbip list {{[-l|--local]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "useradd",
    "description": "Create a new user.",
    "syntax": [
      "sudo useradd {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "userdbctl",
    "description": "Inspect users, groups and group memberships on the system.",
    "syntax": [
      "userdbctl user"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "userdel",
    "description": "Remove a user account or remove a user from a group.",
    "syntax": [
      "sudo userdel {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "usermod",
    "description": "Modify a user account.",
    "syntax": [
      "sudo usermod {{[-l|--login]}} {{new_username}} {{username}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "utmpdump",
    "description": "Dump and load btmp, utmp and wtmp accounting files.",
    "syntax": [
      "utmpdump {{/var/log/wtmp}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "uuid",
    "description": "Generate and decode Universally Unique Identifiers (UUID).",
    "syntax": [
      "uuid"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "uuidd",
    "description": "Daemon for generating UUIDs.",
    "syntax": [
      "uuidd {{[-r|--random]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "uuidgen",
    "description": "Generate unique identifiers (UUIDs).",
    "syntax": [
      "uuidgen {{[-r|--random]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "uuidparse",
    "description": "Parse universally unique identifiers.",
    "syntax": [
      "uuidparse {{uuid1 uuid2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "uvcdynctrl",
    "description": "A libwebcam command-line tool to manage dynamic controls in uvcvideo.",
    "syntax": [
      "uvcdynctrl {{[-l|--list]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "v4l2-ctl",
    "description": "Control video devices.",
    "syntax": [
      "v4l2-ctl --list-devices"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vcgencmd",
    "description": "Print system information for a Raspberry Pi.",
    "syntax": [
      "vcgencmd commands"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "veracrypt",
    "description": "Free and open source disk encryption software.",
    "syntax": [
      "veracrypt {{[-t|--text]}} {{[-c|--create]}} --random-source={{/dev/urandom}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vgchange",
    "description": "Change the attributes of a Logical Volume Manager (LVM) volume group.",
    "syntax": [
      "sudo vgchange --activate {{y|n}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vgcreate",
    "description": "Create volume groups combining multiple mass-storage devices.",
    "syntax": [
      "vgcreate {{vg1}} {{/dev/sda1}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vgdisplay",
    "description": "Display information about Logical Volume Manager (LVM) volume groups.",
    "syntax": [
      "sudo vgdisplay"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vgremove",
    "description": "Remove volume group(s) in LVM.",
    "syntax": [
      "vgremove {{volume_group}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vgs",
    "description": "Display information about volume groups.",
    "syntax": [
      "vgs"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vgscan",
    "description": "Scan for volume groups on all supported Logical Volume Manager (LVM) block devices.",
    "syntax": [
      "sudo vgscan"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "viewnior",
    "description": "Simple and elegant image viewer.",
    "syntax": [
      "viewnior {{path/to/image.ext}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vigr",
    "description": "Edit the group file.",
    "syntax": [
      "vigr"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "vipw",
    "description": "Edit the password file.",
    "syntax": [
      "vipw"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "virt-manager",
    "description": "A desktop user interface for managing KVM and Xen virtual machines and LXC containers.",
    "syntax": [
      "virt-manager"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "virt-viewer",
    "description": "Minimal graphical interface for a virtual machine (VM).",
    "syntax": [
      "virt-viewer"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "virt-xml-validate",
    "description": "Validate `libvirt` XML files against a schema.",
    "syntax": [
      "virt-xml-validate {{path/to/file.xml}} {{schema}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "virt-xml",
    "description": "Edit libvirt Domain XML files with explicit command-line options.",
    "syntax": [
      "virt-xml --{{option}}=?"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "vivaldi-stable",
    "description": "This command is an alias of `chromium`.",
    "syntax": [
      "tldr chromium"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vkpurge",
    "description": "List or remove old kernel versions left behind by `xbps`.",
    "syntax": [
      "vkpurge list {{version}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vmstat",
    "description": "Report information about processes, memory, paging, block IO, traps, disks and CPU activity.",
    "syntax": [
      "vmstat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vmware-checkvm",
    "description": "Check if the current host is a VMware VM or not.",
    "syntax": [
      "vmware-checkvm"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vncserver",
    "description": "Launch a VNC (Virtual Network Computing) desktop.",
    "syntax": [
      "vncserver"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vncviewer",
    "description": "Launches a VNC (Virtual Network Computing) client.",
    "syntax": [
      "vncviewer {{host}}:{{display_number}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vnstat",
    "description": "A console-based network traffic monitor.",
    "syntax": [
      "vnstat"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vnstati",
    "description": "PNG image output support for vnStat.",
    "syntax": [
      "vnstati --summary --iface {{network_interface}} --output {{path/to/output.png}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vpnc",
    "description": "A VPN client for the Cisco 3000 VPN Concentrator.",
    "syntax": [
      "sudo vpnc {{config_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vrms",
    "description": "Report non-free packages installed on Debian-based OSes.",
    "syntax": [
      "vrms"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "vso",
    "description": "Package manager, system updater and a task automator for Vanilla OS.",
    "syntax": [
      "vso sys-upgrade check"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "vzdump",
    "description": "Backup Utility for virtual machines and containers.",
    "syntax": [
      "vzdump {{vm_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "waitpid",
    "description": "Wait for the termination of arbitrary processes.",
    "syntax": [
      "waitpid {{pid1 pid2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "System"
  },
  {
    "command": "wajig",
    "description": "Simplified all-in-one-place system support tool for Debian-based systems.",
    "syntax": [
      "wajig update"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "wal-telegram",
    "description": "Generate themes for Telegram based the colors generated by pywal/wal.",
    "syntax": [
      "wal-telegram"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wall",
    "description": "Write a message on the terminals of users currently logged in.",
    "syntax": [
      "wall {{message}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wami",
    "description": "An open-source and easy-to-use tool that recommends suitable programs for tasks.",
    "syntax": [
      "wami {{[-a|--show-all]}} {{[-S|--sort]}} {{asc|desc}} {{[-s|--search-all]}} {{search_string}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "warpd",
    "description": "A modal keyboard driven pointer manipulation program.",
    "syntax": [
      "warpd --normal"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "waydroid",
    "description": "A container-based approach to boot a full Android system on a regular Linux system like Ubuntu.",
    "syntax": [
      "waydroid"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "waypipe",
    "description": "Remotely run graphical applications under a Wayland compositor.",
    "syntax": [
      "waypipe ssh {{user}}@{{server}} {{program}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wdctl",
    "description": "Show the hardware watchdog status.",
    "syntax": [
      "wdctl"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wf-recorder",
    "description": "Screencast for Wayland optionally with audio.",
    "syntax": [
      "wf-recorder {{[-f|--file]}} {{output.mp4}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wg-quick",
    "description": "Quickly set up WireGuard tunnels based on config files.",
    "syntax": [
      "wg-quick up {{interface_name}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "wg",
    "description": "Manage the configuration of WireGuard interfaces.",
    "syntax": [
      "sudo wg"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "whatis",
    "description": "Display one-line descriptions from manual pages.",
    "syntax": [
      "whatis {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "whereis",
    "description": "Locate the binary, source, and manual page files for a command.",
    "syntax": [
      "whereis {{ssh}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "whiptail",
    "description": "Display text-based dialog boxes from shell scripts.",
    "syntax": [
      "whiptail --title \"{{title}}\" --msgbox \"{{message}}\" {{height_in_chars}} {{width_in_chars}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "wifi-menu",
    "description": "Interactively connect to a wireless network.",
    "syntax": [
      "wifi-menu"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "wine",
    "description": "Run Windows executables on Unix-based systems.",
    "syntax": [
      "wine {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "winetricks",
    "description": "Manage Wine virtual Windows environments.",
    "syntax": [
      "winetricks"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wipefs",
    "description": "Wipe filesystem, raid, or partition-table signatures from a device.",
    "syntax": [
      "sudo wipefs {{/dev/sdX}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "wireplumber",
    "description": "A modular session/policy manager for PipeWire and a GObject-based high-level library that wraps PipeWire‚Äôs API.",
    "syntax": [
      "systemctl --user --now enable wireplumber"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "wl-copy",
    "description": "Clear and copy to Wayland clipboard.",
    "syntax": [
      "wl-copy \"{{text}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "wl-paste",
    "description": "Paste content in Wayland clipboard.",
    "syntax": [
      "wl-paste"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "wmctrl",
    "description": "CLI for X Window Manager.",
    "syntax": [
      "wmctrl -l"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wodim",
    "description": "Command (aliased as `cdrecord` on some systems) for recording data to CDs or DVDs.",
    "syntax": [
      "wodim --devices"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "woeusb",
    "description": "Windows media creation tool.",
    "syntax": [
      "woeusb --device {{path/to/windows.iso}} {{/dev/sdX}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wofi",
    "description": "An application launcher for wlroots-based Wayland compositors, similar to `rofi` and `dmenu`.",
    "syntax": [
      "wofi {{[-S|--show]}} drun"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wol",
    "description": "Client for sending Wake-on-LAN magic packets.",
    "syntax": [
      "wol {{mac_address}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wpa_cli",
    "description": "Add and configure wlan interfaces.",
    "syntax": [
      "wpa_cli scan"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wpa_passphrase",
    "description": "Generate a WPA-PSK key from an ASCII passphrase for a SSID.",
    "syntax": [
      "wpa_passphrase {{SSID}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wpctl",
    "description": "Manage WirePlumber, a session and policy manager for PipeWire.",
    "syntax": [
      "wpctl status"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "write",
    "description": "Write a message on the terminal of a specified logged in user (`<Ctrl c>` to stop writing messages).",
    "syntax": [
      "write {{username}} {{terminal_id}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wtf",
    "description": "Show the expansions of acronyms.",
    "syntax": [
      "wtf {{IMO}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "wtype",
    "description": "Simulate keyboard input on Wayland, similar to `xdotool type` for X11.",
    "syntax": [
      "wtype \"{{Hello World}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "x0vncserver",
    "description": "TigerVNC Server for X displays.",
    "syntax": [
      "x0vncserver -display {{:0}} -passwordfile {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "x11vnc",
    "description": "A VNC server that will enable VNC on an existing display server.",
    "syntax": [
      "x11vnc -shared"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "x86_64",
    "description": "This command is an alias of `setarch x86_64`.",
    "syntax": [
      "tldr setarch"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "xauth",
    "description": "Edit and display the authorization information used in connecting to the X server.",
    "syntax": [
      "xauth -f {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xbacklight",
    "description": "Utility to adjust backlight brightness using the RandR extension.",
    "syntax": [
      "xbacklight"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xbps-install",
    "description": "XBPS utility to (re)install and update packages.",
    "syntax": [
      "xbps-install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xbps-query",
    "description": "XBPS utility to query for package and repository information.",
    "syntax": [
      "xbps-query --search {{regular_expression|keyword}} --repository --regex"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xbps-remove",
    "description": "XBPS utility to remove packages.",
    "syntax": [
      "xbps-remove {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xbps",
    "description": "The X Binary Package System is the package manager used by Void Linux.",
    "syntax": [
      "tldr xbps-install"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xclip",
    "description": "X11 clipboard manipulation tool, similar to `xsel`.",
    "syntax": [
      "echo 123 | xclip"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "xclock",
    "description": "Display the time in analog or digital form.",
    "syntax": [
      "xclock"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xcowsay",
    "description": "Display a cute cow and message on your Linux desktop.",
    "syntax": [
      "xcowsay \"{{hello, world}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xcursorgen",
    "description": "Create an X cursor file from a collection of PNGs.",
    "syntax": [
      "xcursorgen {{path/to/config.cursor}} {{path/to/output_file}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "xdg-desktop-menu",
    "description": "Command-line tool for installing or uninstalling desktop menu items.",
    "syntax": [
      "xdg-desktop-menu install {{path/to/file.desktop}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xdg-mime",
    "description": "Query and manage MIME types according to the XDG standard.",
    "syntax": [
      "xdg-mime query filetype {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xdg-open",
    "description": "Open a file or URL in the user's preferred application.",
    "syntax": [
      "xdg-open ."
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "xdg-settings",
    "description": "Manage settings of XDG-compatible desktop environments.",
    "syntax": [
      "xdg-settings get {{default-web-browser}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xdg-user-dirs-update",
    "description": "Update XDG user directories.",
    "syntax": [
      "xdg-user-dirs-update --set DESKTOP \"{{path/to/directory}}\""
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xdotool",
    "description": "Command-line automation for X11.",
    "syntax": [
      "xdotool search --onlyvisible --name {{firefox}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xed",
    "description": "Edit files in Cinnamon desktop environment.",
    "syntax": [
      "xed"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "xeyes",
    "description": "Display eyes on the screen that follow the mouse cursor.",
    "syntax": [
      "xeyes"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xfce4-screenshooter",
    "description": "The XFCE4 screenshot tool.",
    "syntax": [
      "xfce4-screenshooter"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xfce4-terminal",
    "description": "The XFCE4 terminal emulator.",
    "syntax": [
      "xfce4-terminal"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xfreerdp",
    "description": "Free Remote Desktop Protocol implementation.",
    "syntax": [
      "xfreerdp /u:{{username}} /p:{{password}} /v:{{ip_address}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xfs_repair",
    "description": "Repair an XFS filesystem.",
    "syntax": [
      "sudo xfs_repair {{path/to/partition}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "xhost",
    "description": "Manage access control lists for X server connections.",
    "syntax": [
      "xhost"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xinput",
    "description": "List available input devices, query information about a device and change input device settings.",
    "syntax": [
      "xinput list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xman",
    "description": "Manual page viewer for X Window System.",
    "syntax": [
      "xman"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xmodmap",
    "description": "Utility for modifying keymaps and pointer button mappings in X.",
    "syntax": [
      "xmodmap -e 'pointer = 3 2 1'"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xmount",
    "description": "Convert on-the-fly between multiple input and output hard disk image types with optional write cache support.",
    "syntax": [
      "xmount --in {{raw}} {{path/to/image.dd}} --out {{dmg}} {{mountpoint}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "xrandr",
    "description": "Set the size, orientation and/or reflection of the outputs for a screen.",
    "syntax": [
      "xrandr {{[-q|--query]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xrdb",
    "description": "X window server's resource database utility for Unix-like systems.",
    "syntax": [
      "xrdb"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xsel",
    "description": "X11 selection and clipboard manipulation tool.",
    "syntax": [
      "echo 123 | xsel {{[-ib|--input --clipboard]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "xset",
    "description": "User preference utility for X.",
    "syntax": [
      "xset s off"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xsetwacom",
    "description": "Command-line tool to change settings for Wacom pen tablets at runtime.",
    "syntax": [
      "xsetwacom list"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xterm",
    "description": "A terminal emulator for the X Window System.",
    "syntax": [
      "xterm -T {{Example}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xtrlock",
    "description": "Lock the X display until the user supplies their password.",
    "syntax": [
      "xtrlock"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xvfb-run",
    "description": "Run a command in a virtual X server environment.",
    "syntax": [
      "xvfb-run {{command}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xwinwrap",
    "description": "Run a player or a program as desktop background.",
    "syntax": [
      "xwinwrap -b -nf -ov -- {{mpv}} --wid {{wid}} --loop --no-audio --no-resume-playback --panscan={{1.0}} {{path/to/video.mp4}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "xxhsum",
    "description": "Print or verify checksums using fast non-cryptographic algorithm xxHash.",
    "syntax": [
      "xxhsum -H{{0|32|64|128}} {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yakuake",
    "description": "A drop-down terminal for KDE.",
    "syntax": [
      "yakuake"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yaourt",
    "description": "Arch Linux utility for building packages from the Arch User Repository.",
    "syntax": [
      "yaourt -Syua"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yay",
    "description": "Yet Another Yogurt: build and install packages from the Arch User Repository.",
    "syntax": [
      "yay {{package_name|search_term}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ydotool",
    "description": "Control keyboard and mouse inputs via commands in a way that is display server agnostic.",
    "syntax": [
      "ydotoold"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yetris",
    "description": "Clone of the game Tetris in the terminal.",
    "syntax": [
      "yetris"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yplan",
    "description": "Generate LaTeX code for a two-page vertical daily planner for any chosen year.",
    "syntax": [
      "yplan {{language}} {{lettercase}} {{year}} > {{path/to/file.tex}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "ytfzf",
    "description": "Find and download videos and music. Written in POSIX shell.",
    "syntax": [
      "ytfzf --show-thumbnails {{search_pattern}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yum config-manager",
    "description": "This command is an alias of `dnf config-manager`.",
    "syntax": [
      "tldr dnf config-manager"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "yum",
    "description": "Package management utility for RHEL, Fedora, and CentOS (for older versions).",
    "syntax": [
      "yum install {{package}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zathura",
    "description": "A vim-like modal document viewer, with an integrated command-line.",
    "syntax": [
      "zathura {{path/to/file}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zbarcam",
    "description": "Scan and decode barcodes (and QR codes) from a video device.",
    "syntax": [
      "zbarcam"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zdump",
    "description": "Print timezone information.",
    "syntax": [
      "zdump {{timezone}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zenity",
    "description": "Display dialogs from the command-line/shell scripts.",
    "syntax": [
      "zenity --question"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "zforce",
    "description": "Add a `.gz` extension to files compressed using `gzip`.",
    "syntax": [
      "zforce {{path/to/file1 path/to/file2 ...}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "zic",
    "description": "Compile timezones into binary files.",
    "syntax": [
      "zic -d {{path/to/directory}}"
    ],
    "options": [],
    "examples": [],
    "category": "File"
  },
  {
    "command": "zile",
    "description": "A lightweight clone of the Emacs text editor.",
    "syntax": [
      "zile"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zipsplit",
    "description": "Split a Zip archive into smaller Zip archives.",
    "syntax": [
      "zipsplit {{path/to/archive.zip}}"
    ],
    "options": [],
    "examples": [],
    "category": "Network"
  },
  {
    "command": "znc",
    "description": "IRC bouncer.",
    "syntax": [
      "znc {{[-c|--makeconf]}}"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zramctl",
    "description": "Setup and control zram devices.",
    "syntax": [
      "lsmod | grep {{[-i|--ignore-case]}} zram"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  },
  {
    "command": "zypper",
    "description": "SUSE & openSUSE package management utility.",
    "syntax": [
      "zypper refresh"
    ],
    "options": [],
    "examples": [],
    "category": "Other"
  }
]